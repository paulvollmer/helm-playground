{"version":3,"sources":["components/Navigation/index.tsx","components/RenderResult/index.tsx","defaults/chart_yaml.ts","defaults/values_yaml.ts","defaults/helmignore.ts","components/FileViewer/index.tsx","components/Export/index.ts","components/import/index.ts","components/Settings/index.tsx","App.tsx","defaults/helpers.ts","defaults/deployment_yaml.ts","defaults/ingress.ts","defaults/notes.ts","defaults/service.ts","defaults/serviceaccount.ts","reportWebVitals.ts","index.tsx"],"names":["Logo","style","width","id","xmlns","viewBox","fill","d","Navigation","props","AppBar","position","background","Toolbar","Typography","variant","color","className","Button","onClick","handleExport","handleSettings","IconButton","window","open","RenderError","error","kind","message","file","line","RenderResult","data","mode","theme","name","height","value","result","editorProps","$blockScrolling","chartFilename","chartContent","valuesFilename","helmignoreFilename","FileViewer","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultExpanded","onNodeSelect","selected","TreeItem","nodeId","label","Object","keys","sources","map","filename","onDelete","title","TreeItemLabel","React","useState","contextMenu","setContextMenu","handleClose","onContextMenu","event","preventDefault","mouseX","clientX","mouseY","clientY","cursor","Menu","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","e","files","console","log","zip","JSZip","chart","values","helmignore","templateDir","folder","templates","forEach","templateName","generateAsync","type","then","content","saveAs","handleImport","useStyles","makeStyles","createStyles","typography","marginTop","spacing","marginBottom","textfield","kubernetesVersions","Settings","classes","release","releaseName","setReleaseName","namespace","releaseNamespace","setReleaseNamespace","isUpgrade","releaseIsUpgrade","setReleaseIsUpgrade","isInstall","releaseIsInstall","setReleaseIsInstall","revision","releaseRevision","setReleaseRevision","service","releaseService","setReleaseService","kubeVersion","version","setKubeVersion","helmVersion","setHelmVersion","gitCommit","helmGitCommit","setHelmGitCommit","gitTreeState","helmGitTreeState","setHelmGitTreeState","goVersion","helmGoVersion","setHelmGoVersion","Paper","padding","Grid","container","item","md","TextField","fullWidth","onChange","target","Autocomplete","options","getOptionLabel","option","freeSolo","v","renderInput","params","major","minor","handleSave","createTheme","root","flexGrow","navTitle","marginLeft","initialTemplateSources","autocompleteChartYaml","caption","meta","score","emptySettings","App","wasmLoaded","setWasmLoaded","wasmError","setWasmError","chartSource","setChartSource","valuesSource","setValuesSource","helmignoreSource","setHelmignoreSource","setSources","setSelected","editor","setEditor","customAnnotations","setCustomAnnotations","aceEditor","row","text","aceEditorError","setAceEditorError","fileRename","setfileRename","renderResult","setRenderResult","showSettings","setShowSettings","settings","setSettings","useEffect","fetch","response","arrayBuffer","bin","go","Go","WebAssembly","instantiate","importObject","run","instance","helmRender","helmDefaultCapabilities","catch","err","addCompleter","getCompletions","session","pos","prefix","callback","filesToRender","JSON","stringify","annotation","tmpError","column","custom","getSession","setAnnotations","ThemeProvider","CssBaseline","Box","sx","pt","pb","Container","maxWidth","disableGutters","textAlign","show","xs","nodeIds","tmp","src","border","onBlur","tmpContent","newValue","annotations","CircularProgress","Editor","length","nextAnnotations","onLoad","onValidate","setOptions","useWorker","enableBasicAutocompletion","enableLiveAutocompletion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.948eef4f.chunk.js","sourcesContent":["import React from \"react\";\nimport {AppBar, Button, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\ntype NavigationProps = {\n    handleImport: () => void;\n    handleExport: () => void;\n    handleSettings: () => void;\n    className: string;\n}\n\nconst Navigation = (props: NavigationProps) => {\n    const handleGithub = () => {\n        window.open(\"http://github.com/paulvollmer/helm-playground\")\n    }\n\n    return (\n        <AppBar position=\"fixed\" style={{background: '#0f1689'}}>\n            <Toolbar>\n                <Logo/>\n                <Typography variant=\"h6\" color=\"inherit\" className={props.className}>\n                    Playground\n                </Typography>\n                {/* <Button color=\"inherit\" onClick={props.handleImport}>Import</Button> */}\n                <Button color=\"inherit\" onClick={props.handleExport}>Export</Button>\n                <Button color=\"inherit\" onClick={props.handleSettings}>Settings</Button>\n                <IconButton color=\"inherit\" onClick={handleGithub}><GitHubIcon/></IconButton>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nconst Logo = () => (\n    <div style={{width: \"50px\"}}>\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\n            <path fill=\"#fff\"\n                  d=\"M136.52938,121.13478c-.572-.54252-1.19462-1.12636-1.81-1.71761-12.61677-12.12115-22.38092-26.13637-28.279-42.702-1.65073-4.63637-2.89692-9.36515-2.67587-14.35871.021-.4739.01959-.94915.05226-1.42214.445-6.44594,4.75912-9.70322,11.05839-8.17669a27.325,27.325,0,0,1,5.73149,2.19653c6.89022,3.45538,12.5062,8.56359,17.67051,14.16571a112.52651,112.52651,0,0,1,21.722,33.42965,8.29635,8.29635,0,0,0,.38946.861c.07116.12855.22232.21282.55927.51883A176.357,176.357,0,0,1,241.968,79.06864c-.17651-.8761-.28195-1.54571-.44772-2.2a112.49436,112.49436,0,0,1-2.65292-36.95637,84.07478,84.07478,0,0,1,4.44444-21.76378,31.32555,31.32555,0,0,1,5.47651-10.17139,15.687,15.687,0,0,1,3.16336-2.82149,7.026,7.026,0,0,1,8.03255-.056,17.27854,17.27854,0,0,1,5.8402,6.73185A53.05435,53.05435,0,0,1,271.08657,26.508a112.50469,112.50469,0,0,1,2.12263,33.00356,95.59806,95.59806,0,0,1-3.49052,19.91081c7.12171,1.31193,14.20955,2.32869,21.1473,3.97713a186.37909,186.37909,0,0,1,20.44069,6.0033A188.31671,188.31671,0,0,1,331.0769,97.9721c6.34538,3.16433,12.38553,6.94066,18.71757,10.53829.20571-.433.50439-.94982.706-1.50212A108.65959,108.65959,0,0,1,383.40128,60.246a37.75787,37.75787,0,0,1,11.822-6.883,17.24558,17.24558,0,0,1,3.67827-.84512c6.264-.71729,8.89351,3.2244,9.35653,7.93183a29.94372,29.94372,0,0,1-.77381,10.35466A87.90551,87.90551,0,0,1,396.75426,95.492c-6.79016,10.97178-14.85015,20.85494-25.09307,28.83042-.30234.2354-.56784.51814-1.07988.99029a177.77993,177.77993,0,0,1,26.59293,30.88244,10.96227,10.96227,0,0,1-1.689.29762c-10.59546.015-21.1911-.01829-31.78622.04607a4.004,4.004,0,0,1-3.17246-1.69,147.87522,147.87522,0,0,0-88.17776-46.54846,143.35862,143.35862,0,0,0-30.27955-1.16923,146.40735,146.40735,0,0,0-82.53728,31.81054,140.06663,140.06663,0,0,0-16.97616,15.84186,4.72839,4.72839,0,0,1-3.86326,1.75742c-10.12056-.07028-20.24188-.035-30.36293-.03495h-2.15212c.618-2.408,6.84026-10.93786,13.88352-18.55281C125.31349,132.2744,130.87768,126.8839,136.52938,121.13478Z\"/>\n            <path fill=\"#fff\"\n                  d=\"M394.52934,347.9123a176.63854,176.63854,0,0,1-23.97343,27.16338c.70941.59068,1.28594,1.07041,1.86212,1.55057A108.31456,108.31456,0,0,1,406.10131,424.772a34.61831,34.61831,0,0,1,2.202,14.42026,14.88544,14.88544,0,0,1-.74786,3.69206,7.20762,7.20762,0,0,1-8.15793,5.02308,22.23329,22.23329,0,0,1-6.76276-2.00629,51.23237,51.23237,0,0,1-9.18151-5.8151,107.59183,107.59183,0,0,1-32.936-46.7072c-.18746-.51334-.39218-1.0204-.72243-1.87691a194.65008,194.65008,0,0,1-25.01223,14.00774,181.66925,181.66925,0,0,1-26.6869,9.72442,187.55649,187.55649,0,0,1-28.3045,5.38805c.16807.84015.26446,1.5098.43745,2.15907a109.172,109.172,0,0,1,2.9708,36.44311,80.804,80.804,0,0,1-4.42286,22.4773,78.24971,78.24971,0,0,1-4.16475,8.74473,13.39,13.39,0,0,1-2.33865,2.97083c-3.98009,4.109-8.73225,4.144-12.61157-.07366a27.28012,27.28012,0,0,1-3.907-5.61776c-3.07685-5.77569-4.6604-12.056-5.791-18.46021a116.86329,116.86329,0,0,1-1.35893-26.465,94.4795,94.4795,0,0,1,2.88466-19.18513c.14009-.53269.268-1.0696.37134-1.61034.02629-.13754-.06342-.2973-.17067-.73825a176.12108,176.12108,0,0,1-80.96855-24.99386c-.40992.90921-.76206,1.67473-1.10168,2.44579a110.47729,110.47729,0,0,1-30.90112,41.42041,38.16071,38.16071,0,0,1-12.04706,6.95909,12.08987,12.08987,0,0,1-6.51516.70023,7.11858,7.11858,0,0,1-5.40329-4.4892c-1.41614-3.424-1.16526-6.985-.68438-10.51691a55.45267,55.45267,0,0,1,4.30768-14.25037A112.49985,112.49985,0,0,1,134.88761,380.779c.459-.43461.92981-.857,1.38087-1.29954a3.76029,3.76029,0,0,0,.36534-.65529,178.90466,178.90466,0,0,1-28.469-31.31672c.98458-.08018,1.64327-.18,2.30205-.1806,10.51436-.00976,21.029.02736,31.54284-.04358a4.70554,4.70554,0,0,1,3.70344,1.62615,146.94611,146.94611,0,0,0,39.40276,28.88494,139.94667,139.94667,0,0,0,49.70395,14.77367q70.68048,6.87067,121.59971-42.85452a7.64571,7.64571,0,0,1,5.99261-2.44347c9.80139.12121,19.60512.04986,29.408.04986h2.53353Z\"/>\n            <path fill=\"#fff\"\n                  d=\"M350.73576,197.76167c2.78711,0,5.47037.18919,8.11487-.0501,2.9951-.271,5.139.8001,7.32354,2.81308,12.61275,11.62214,25.35732,23.10129,38.05863,34.62729.63855.57948,1.29039,1.14432,2.1101,1.8701.76445-.65718,1.48119-1.24318,2.16483-1.8655Q428.14636,217.27914,447.756,199.37a5.44772,5.44772,0,0,1,4.20358-1.64576c3.21888.13038,6.44673.03746,9.8412.03746V303.13036c-1.72309.50368-24.8756.60366-27.63911.0611v-53.362l-.53656-.25427c-9.01079,8.21784-18.0216,16.43564-27.23786,24.8408-9.22584-8.31119-18.34194-16.52347-27.458-24.73577l-.52449.19192c-.023,4.45359-.00774,8.90828-.01046,13.36233q-.00408,6.63942-.00058,13.27882v26.87211h-27.428C350.45161,301.61243,350.21289,203.72342,350.73576,197.76167Z\"/>\n            <path fill=\"#fff\"\n                  d=\"M97.63436,197.88229h27.26325c.55054,1.75251.65821,102.97139.09469,105.525H97.70468c-.15021-6.70344-.04736-13.38394-.06622-20.06131-.01871-6.62261-.0041-13.24531-.0041-20.03958H63.84679V303.047c-2.05946.61518-25.33374.67417-27.64758.123V197.89436H63.73742v37.18876c1.96793.56844,30.92319.67339,33.872.12942.00818-2.97713.02-6.02646.024-9.0758q.0063-4.7433.00094-9.4866,0-4.625,0-9.25C97.63437,204.32179,97.63436,201.24346,97.63436,197.88229Z\"/>\n            <path fill=\"#fff\"\n                  d=\"M157.5757,303.3683V198.1946c1.617-.52913,61.545-.73586,65.46219-.20457v22.41432c-.87869.063-1.7857.18341-2.69279.18454q-16.0086.01994-32.01725.00881l-2.96767,0v17.43353H218.7067V261.2229H185.65838c-.55339,1.98509-.70531,15.81681-.25622,19.64583.84488.05679,1.75.16952,2.6553.17059q16.00862.01863,32.01727.00822h2.96945V303.3683Z\"/>\n            <path fill=\"#fff\"\n                  d=\"M254.28291,303.40855c-.50074-2.82232-.39948-103.60181.09747-105.51735h27.16208v77.76453c1.17173.06084,2.09122.14921,3.01077.15005q16.128.01468,32.2561.00658c.92562,0,1.85125,0,2.90733,0v27.59622Z\"/>\n        </svg>\n    </div>\n)\n\nexport default Navigation\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport {helmRenderReturn, helmRenderReturnError} from \"../../types\";\nimport {Typography} from \"@material-ui/core\";\n\ntype RenderResultProps = {\n    data: helmRenderReturn\n}\n\n/**\n * call the helmRender function and dispay the result\n */\nconst RenderResult = (props: RenderResultProps) => {\n    return (\n        <>\n            {props.data.error ? (\n                <RenderError error={props.data.error}/>\n            ) : (\n                <>\n                    <Typography variant=\"subtitle1\">Render Output</Typography>\n                    <AceEditor\n                        mode=\"yaml\"\n                        theme=\"github\"\n                        name=\"editor\"\n                        width=\"100%\"\n                        height=\"calc(100vh - 100px)\"\n                        value={props.data.result}\n                        editorProps={{$blockScrolling: true}}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\n\ntype RenderErrorProps = {\n    error: helmRenderReturnError;\n}\n\nconst RenderError = (props: RenderErrorProps) => {\n    return (\n        <div>\n            <Typography variant=\"subtitle1\">\n                Error Kind: {props.error.kind}\n            </Typography>\n            <Typography variant=\"h6\">\n                {props.error.message}\n            </Typography>\n            <Typography variant=\"body1\">\n                File: {props.error.file} \n                <br/>\n                {props.error.line ? (`Line: ${props.error.line}`): \"\"}\n            </Typography>\n        </div>\n    )\n}\n\nexport default RenderResult\n","export const chartFilename = \"Chart.yaml\"\n\nexport const chartContent = `apiVersion: v2\nname: sample\ndescription: A Helm chart for Kubernetes\n\n# A chart can be either an 'application' or a 'library' chart.\n#\n# Application charts are a collection of templates that can be packaged into versioned archives\n# to be deployed.\n#\n# Library charts provide useful utilities or functions for the chart developer. They're included as\n# a dependency of application charts to inject those utilities and functions into the rendering\n# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 0.1.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\n# It is recommended to use it with quotes.\nappVersion: \"1.16.0\"\n\nmaintainers:\n  - name: Paul Vollmer\n    url: https://paulvollmer.net/helm-playground\n`\n","export const valuesFilename = \"values.yaml\"\n\nexport const valuesContent = `# Default values for foo.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: nginx\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: v1.0.0\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n`\n","export const helmignoreFilename = \".helmignore\"\n\nexport const helmignoreContent = `# Patterns to ignore when building packages.\n# This supports shell glob matching, relative path matching, and\n# negation (prefixed with !). Only one pattern per line.\n.DS_Store\n# Common VCS dirs\n.git/\n.gitignore\n.bzr/\n.bzrignore\n.hg/\n.hgignore\n.svn/\n# Common backup files\n*.swp\n*.bak\n*.tmp\n*.orig\n*~\n# Various IDEs\n.project\n.idea/\n*.tmproj\n.vscode/\n`\n","import { Menu, MenuItem } from \"@material-ui/core\";\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { chartFilename } from \"../../defaults/chart_yaml\";\nimport { valuesFilename } from \"../../defaults/values_yaml\";\nimport { helmignoreFilename } from \"../../defaults/helmignore\";\nimport React from \"react\";\n\ntype FileViewerProps = {\n    className: string;\n    onNodeSelect?: (event: React.ChangeEvent<{}>, nodeIds: string) => void;\n    sources: any;\n    onDelete: (event: React.ChangeEvent<{}>, src: string) => void;\n    selected: string | undefined;\n}\n\nconst FileViewer = (props: FileViewerProps) => {\n    return (\n        <>\n            <TreeView\n                className={props.className}\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                defaultExpanded={['templates']}\n                onNodeSelect={props.onNodeSelect}\n                selected={props.selected}\n            >\n                <TreeItem nodeId={chartFilename} label={chartFilename} />\n                <TreeItem nodeId={valuesFilename} label={valuesFilename} />\n                <TreeItem nodeId={helmignoreFilename} label={helmignoreFilename} />\n                <TreeItem nodeId=\"templates\" label=\"templates\">\n                    {Object.keys(props.sources).map((filename) => {\n                        return <TreeItem key={filename} nodeId={filename} label={<TreeItemLabel onDelete={props.onDelete} title={filename} />} />\n                    })}\n                <TreeItem nodeId={\"__ADD__\"} label={\"+\"} />\n                </TreeItem>\n            </TreeView>\n        </>\n    )\n}\nexport default FileViewer;\n\ntype TreeItemLabelProps = {\n    onDelete: (event: React.ChangeEvent<{}>, src: string) => void;\n    title: string;\n}\n\nconst TreeItemLabel = (props: TreeItemLabelProps) => {\n    const [contextMenu, setContextMenu] = React.useState<{\n        mouseX: number;\n        mouseY: number;\n    } | null>(null);\n\n    const handleContextMenu = (event: any) => {\n        event.preventDefault();\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX - 2,\n                    mouseY: event.clientY - 4,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        );\n    };\n\n    const handleClose = () => {\n        setContextMenu(null);\n    };\n\n    return (\n        <>\n            <div onContextMenu={handleContextMenu} style={{ cursor: 'context-menu' }}>{props.title}</div>\n\n            <Menu\n                open={contextMenu !== null}\n                onClose={handleClose}\n                anchorReference=\"anchorPosition\"\n                anchorPosition={\n                    contextMenu !== null\n                        ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                        : undefined\n                }\n            >\n                <MenuItem\n                    onClick={e => {\n                        props.onDelete(e, props.title)\n                        handleClose()\n                    }}\n                >\n                    Delete\n                </MenuItem>\n            </Menu>\n        </>\n    )\n}","import JSZip from \"jszip\";\nimport {saveAs} from 'file-saver';\nimport {Sources} from \"../../types\";\nimport {chartFilename} from \"../../defaults/chart_yaml\";\nimport {valuesFilename} from \"../../defaults/values_yaml\";\nimport {helmignoreFilename} from \"../../defaults/helmignore\";\n\ntype Files = {\n    chart: string;\n    values: string;\n    helmignore: string;\n    templates: Sources;\n}\n\nconst handleExport = (name: string, files: Files) => {\n    console.log(\"export\", name, files)\n\n    var zip = new JSZip();\n\n    zip.file(chartFilename, files.chart);\n    zip.file(valuesFilename, files.values);\n    zip.file(helmignoreFilename, files.helmignore);\n\n    let templateDir = zip.folder(\"templates\")\n    Object.keys(files.templates).forEach(templateName => {\n        templateDir?.file(templateName, files.templates[templateName]);\n    })\n\n    zip.generateAsync({type: \"blob\"}).then((content) => {\n        saveAs(content, `${name}.zip`);\n    });\n}\n\nexport default handleExport\n","const handleImport = () => {\n    console.log(\"import\")\n}\n\nexport default handleImport\n","import React, { useState } from \"react\";\nimport { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { SettingsData } from \"../../types\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    typography: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n    },\n    textfield: {\n        marginBottom: theme.spacing(1),\n    }\n}));\n\nconst kubernetesVersions = [\n    \"v1.22.0\",\n    \"v1.21.0\",\n    \"v1.20.0\",\n    \"v1.19.0\",\n    \"v1.18.0\",\n    \"v1.17.0\",\n    \"v1.16.0\",\n    \"v1.15.0\",\n    \"v1.14.0\",\n    \"v1.13.0\",\n    \"v1.12.0\",\n    \"v1.11.0\",\n    \"v1.10.0\",\n    \"v1.9.0\",\n    \"v1.8.0\",\n    \"v1.7.0\",\n    \"v1.6.0\",\n    \"v1.5.0\",\n    \"v1.4.0\",\n    \"v1.3.0\",\n    \"v1.2.0\",\n    \"v1.1.0\",\n    \"v1.0.0\",\n]\n\ntype SettingsProps = {\n    show: boolean;\n    data: SettingsData;\n    handleSave: (d: SettingsData) => void;\n}\n\nconst Settings = (props: SettingsProps) => {\n    const classes = useStyles();\n\n    const [releaseName, setReleaseName] = useState<string>(props.data.release.name)\n    const [releaseNamespace, setReleaseNamespace] = useState<string>(props.data.release.namespace)\n    const [releaseIsUpgrade, setReleaseIsUpgrade] = useState<string>(props.data.release.isUpgrade)\n    const [releaseIsInstall, setReleaseIsInstall] = useState<string>(props.data.release.isInstall)\n    const [releaseRevision, setReleaseRevision] = useState<string>(props.data.release.revision)\n    const [releaseService, setReleaseService] = useState<string>(props.data.release.service)\n\n    const [kubeVersion, setKubeVersion] = useState<string>(props.data.kubeVersion.version)\n    // const [kubeMajor, setKubeMajor] = useState<string>(props.data.kubeVersion.major)\n    // const [kubeMinor, setKubeMinor] = useState<string>(props.data.kubeVersion.minor)\n\n    const [helmVersion, setHelmVersion] = useState<string>(props.data.helmVersion.version)\n    const [helmGitCommit, setHelmGitCommit] = useState<string>(props.data.helmVersion.gitCommit)\n    const [helmGitTreeState, setHelmGitTreeState] = useState<string>(props.data.helmVersion.gitTreeState)\n    const [helmGoVersion, setHelmGoVersion] = useState<string>(props.data.helmVersion.goVersion)\n\n    const handleClick = () => {\n        let data: SettingsData = {\n            release: {\n                name: releaseName,\n                namespace: releaseNamespace,\n                isUpgrade: releaseIsUpgrade,\n                isInstall: releaseIsInstall,\n                revision: releaseRevision,\n                service: releaseService,\n            },\n            kubeVersion: {\n                version: kubeVersion,\n                major: \"\", //kubeMajor,\n                minor: \"\", //kubeMinor,\n            },\n            helmVersion: {\n                version: helmVersion,\n                gitCommit: helmGitCommit,\n                gitTreeState: helmGitTreeState,\n                goVersion: helmGoVersion,\n            }\n        }\n        props.handleSave(data)\n    }\n\n    return (\n        <Paper style={{ padding: \"2em\" }}>\n            <Grid container spacing={2} >\n                <Grid item md={12}>\n                    <Typography variant=\"h4\">\n                        Settings\n                    </Typography>\n\n                    <Typography variant=\"h5\" className={classes.typography}>\n                        Release\n                    </Typography>\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"release-name\"\n                        label=\"Release Name\"\n                        value={releaseName}\n                        onChange={(e) => setReleaseName(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"release-namespace\"\n                        label=\"Release Namespace\"\n                        value={releaseNamespace}\n                        onChange={(e) => setReleaseNamespace(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"release-isupgrade\"\n                        label=\"Release Is Upgrade\"\n                        value={releaseIsUpgrade}\n                        onChange={(e) => setReleaseIsUpgrade(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"release-isinstall\"\n                        label=\"Release Is Install\"\n                        value={releaseIsInstall}\n                        onChange={(e) => setReleaseIsInstall(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"release-revision\"\n                        label=\"Release Revision\"\n                        value={releaseRevision}\n                        onChange={(e) => setReleaseRevision(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"release-service\"\n                        label=\"Release Service\"\n                        value={releaseService}\n                        onChange={(e) => setReleaseService(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item md={6}>\n                    <Typography variant=\"h5\" className={classes.typography}>\n                        Kubernetes Version\n                    </Typography>\n\n                    <Autocomplete\n                        options={kubernetesVersions}\n                        getOptionLabel={(option) => option}\n                        freeSolo\n                        value={kubeVersion}\n                        onChange={(e, v) => {\n                            console.log( v)\n                            if(v !== null) {\n                                setKubeVersion(v)\n                            }\n                        }}\n                        renderInput={(params) => <TextField\n                            {...params}\n                            className={classes.textfield}\n                            fullWidth\n                            variant=\"standard\"\n                            id=\"kubernetes-version\"\n                            label=\"Kubernetes Version\"\n                            onChange={e => { \n                                console.log(e.target.value)\n                                setKubeVersion(e.target.value)\n                            }}\n                        />}\n                    />\n                    {/* <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"kubernetes-major\"\n                        label=\"Kubernetes Major\"\n                        value={kubeMajor}\n                        onChange={(e) => setKubeMajor(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"kubernetes-minor\"\n                        label=\"Kubernetes Minor\"\n                        value={kubeMinor}\n                        onChange={(e) => setKubeMinor(e.target.value)}\n                    /> */}\n                </Grid>\n\n                <Grid item md={6}>\n                    <Typography variant=\"h5\" className={classes.typography}>\n                        Helm Version\n                    </Typography>\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"helm-version\"\n                        label=\"Version\"\n                        value={helmVersion}\n                        onChange={(e) => setHelmVersion(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"helm-goversion\"\n                        label=\"GoVersion\"\n                        value={helmGoVersion}\n                        onChange={(e) => setHelmGoVersion(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"helm-gitcommit\"\n                        label=\"GitCommit\"\n                        value={helmGitCommit}\n                        onChange={(e) => setHelmGitCommit(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"helm-gittreestate\"\n                        label=\"GitTreeState\"\n                        value={helmGitTreeState}\n                        onChange={(e) => setHelmGitTreeState(e.target.value)}\n                    />\n                </Grid>\n\n                <Grid item md={12}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ marginTop: \"2em\" }}\n                        onClick={handleClick}>Save Settings</Button>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default Settings\n","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Box, Container, createTheme, CssBaseline, Grid, makeStyles, Typography, CircularProgress } from '@material-ui/core';\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport { addCompleter } from 'ace-builds/src-noconflict/ext-language_tools';\n\nimport Navigation from \"./components/Navigation\";\nimport RenderResult from \"./components/RenderResult\";\nimport FileViewer from \"./components/FileViewer\";\nimport { chartContent, chartFilename } from \"./defaults/chart_yaml\";\nimport { helpersContent, helpersFilename } from \"./defaults/helpers\";\nimport { valuesContent, valuesFilename } from \"./defaults/values_yaml\";\nimport { ingressContent, ingressFilename } from \"./defaults/ingress\";\nimport { serviceContent, serviceFilename } from \"./defaults/service\";\nimport { notesContent, notesFilename } from \"./defaults/notes\";\nimport { serviceaccountContent, serviceaccountFilename } from \"./defaults/serviceaccount\";\nimport { deploymentContent, deploymentFilename } from \"./defaults/deployment_yaml\";\nimport { helmignoreContent, helmignoreFilename } from \"./defaults/helmignore\";\nimport handleExport from \"./components/Export\";\nimport handleImport from \"./components/import\";\nimport Settings from \"./components/Settings\";\nimport { helmRenderReturn, SettingsData, Sources } from \"./types\";\nimport { Ace } from \"ace-builds\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    navTitle: {\n        flexGrow: 1,\n        marginLeft: \"20px\"\n    },\n}));\n\nlet initialTemplateSources: Sources = {}\ninitialTemplateSources[helpersFilename] = helpersContent\ninitialTemplateSources[deploymentFilename] = deploymentContent\ninitialTemplateSources[ingressFilename] = ingressContent\ninitialTemplateSources[notesFilename] = notesContent\ninitialTemplateSources[serviceFilename] = serviceContent\ninitialTemplateSources[serviceaccountFilename] = serviceaccountContent\n\nconst autocompleteChartYaml = [\n    {\n        name: 'apiVersion',\n        value: 'apiVersion: ',\n        caption: 'apiVersion',\n        meta: 'The chart API version (required)',\n        score: 1,\n    },\n    {\n        name: 'name',\n        value: 'name: ',\n        caption: 'name',\n        meta: 'Chart',\n        score: 1,\n    },\n    {\n        name: 'version',\n        value: 'version: ',\n        caption: 'version',\n        meta: 'A SemVer 2 version (required)',\n        score: 1,\n    },\n    {\n        name: 'kubeVersion',\n        value: 'kubeVersion: ',\n        caption: 'kubeVersion',\n        meta: 'A SemVer range of compatible Kubernetes versions (optional)',\n        score: 1,\n    },\n    {\n        name: 'description',\n        value: 'description: ',\n        caption: 'description',\n        meta: 'A single-sentence description of this project (optional)',\n        score: 1,\n    },\n    {\n        name: 'type',\n        value: 'type: ',\n        caption: 'type',\n        meta: 'The type of the chart (optional)',\n        score: 1,\n    },\n    {\n        name: 'keywords',\n        value: 'keywords:\\n  - ',\n        caption: 'keywords',\n        meta: 'A list of keywords about this project (optional)',\n        score: 1,\n    },\n    {\n        name: 'home',\n        value: 'home: ',\n        caption: 'home',\n        meta: 'The URL of this projects home page (optional)',\n        score: 1,\n    },\n    {\n        name: 'sources',\n        value: 'sources:\\n  - ',\n        caption: 'sources',\n        meta: 'A list of URLs to source code for this project (optional)',\n        score: 1,\n    },\n    {\n        name: 'dependencies',\n        value: 'dependencies:\\n  - name: \\n    version: ',\n        caption: 'dependencies',\n        meta: 'A list of the chart requirements (optional)',\n        score: 1,\n    },\n    {\n        name: 'maintainers',\n        value: 'maintainers:\\n  - name: \\n    email: \\n    url: ',\n        caption: 'maintainers',\n        meta: '',\n        score: 1,\n    },\n    {\n        name: 'icon',\n        value: 'icon: ',\n        caption: 'icon',\n        meta: 'A URL to an SVG or PNG image to be used as an icon (optional).',\n        score: 1,\n    },\n    {\n        name: 'appVersion',\n        value: 'appVersion: ',\n        caption: 'appVersion',\n        meta: 'The version of the app that this contains (optional). Needn\\'t be SemVer. Quotes recommended.',\n        score: 1,\n    },\n    {\n        name: 'deprecated',\n        value: 'deprecated: true',\n        caption: 'deprecated',\n        meta: 'Whether this chart is deprecated (optional, boolean)',\n        score: 1,\n    },\n    {\n        name: 'annotations',\n        value: 'annotations:\\n  key: value',\n        caption: 'annotations',\n        meta: '',\n        score: 1,\n    },\n]\n\nconst emptySettings = {\n    release: {\n        name: \"\",\n        namespace: \"\",\n        revision: \"\",\n        isUpgrade: \"\",\n        isInstall: \"\",\n        service: \"\",\n    },\n    kubeVersion: {\n        version: \"\",\n        major: \"\",\n        minor: \"\",\n    },\n    helmVersion: {\n        version: \"\",\n        gitCommit: \"\",\n        gitTreeState: \"\",\n        goVersion: \"\",\n    }\n}\n\nconst App = () => {\n    const classes = useStyles();\n\n    const [wasmLoaded, setWasmLoaded] = useState<boolean>(false)\n    const [wasmError, setWasmError] = useState<string>(\"\")\n\n    const [chartSource, setChartSource] = useState(chartContent)\n    const [valuesSource, setValuesSource] = useState(valuesContent)\n    const [helmignoreSource, setHelmignoreSource] = useState(helmignoreContent)\n    const [sources, setSources] = useState(initialTemplateSources)\n\n    const [selected, setSelected] = useState(chartFilename)\n    const [editor, setEditor] = useState(chartContent)\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [customAnnotations, setCustomAnnotations] = useState({})\n    const [aceEditor] = useState<Ace.Editor>();\n    const [aceEditorError, setAceEditorError] = useState({ row: 0, text: \"\" });\n    const [fileRename, setfileRename] = useState(\"\")\n\n    const [renderResult, setRenderResult] = useState<helmRenderReturn>({ result: \"\" })\n\n    const [showSettings, setShowSettings] = useState(false)\n    const [settings, setSettings] = useState<SettingsData>(emptySettings)\n\n    useEffect(() => {\n        // load the golang wasm artifact and then render the react application\n        fetch('main.wasm')\n            .then(response => response.arrayBuffer())\n            .then(function (bin) {\n                // @ts-ignore\n                const go = new Go();\n                WebAssembly.instantiate(bin, go.importObject)\n                    .then((result) => {\n                        go.run(result.instance);\n                        // @ts-ignore\n                        window.helmRender = helmRender\n                        // @ts-ignore\n                        window.helmDefaultCapabilities = helmDefaultCapabilities\n                        setWasmLoaded(true)\n                        setSettings(window.helmDefaultCapabilities())\n                    })\n                    .catch(err => {\n                        console.error(\"webassembly instantiate error\", err)\n                        setWasmError(\"could not instantiate helm renderer\")\n                    });\n            })\n            .catch((err) => {\n                setWasmError(\"could not load helm renderer\")\n                console.error(\"fetch wasm error\", err)\n            });\n\n        addCompleter({\n            getCompletions: function (editor: any, session: any, pos: any, prefix: any, callback: (arg0: null, arg1: { name: string; value: string; caption: string; meta: string; score: number; }[]) => void) {\n                callback(null, [\n                    ...autocompleteChartYaml,\n                ]);\n            },\n        });\n    })\n\n    useEffect(() => {\n        if (wasmLoaded) {\n            const filesToRender: Sources = {}\n            filesToRender[\"_helpers.tpl\"] = sources[\"_helpers.tpl\"]\n            filesToRender[selected] = sources[selected]\n\n            const result = window.helmRender(JSON.stringify(filesToRender), valuesSource, chartSource, JSON.stringify(settings))\n            setRenderResult(result)\n\n            let annotation = {}\n            var tmpError = { row: -1, text: \"\" }\n            if (result.error) {\n                if (result.error.kind !== \"\") {\n                    switch (result?.error.kind) {\n                        case \"input\":\n                            switch (result.error.file) {\n                                case valuesFilename:\n                                    tmpError = { row: result.error.line - 1, text: result.error.message }\n                                    break\n\n                                case chartFilename:\n                                    tmpError = { row: result.error.line - 1, text: result.error.message }\n                                    break\n                            }\n                            break\n\n                        case \"render\":\n                            annotation = {\n                                row: result.error.line - 1,\n                                column: 0,\n                                text: result.error.message,\n                                type: \"error\"\n                            }\n                            break\n                    }\n                }\n            }\n            setCustomAnnotations(annotation)\n            setAceEditorError(tmpError)\n        }\n    }, [wasmLoaded, editor, sources, valuesSource, chartSource, settings, selected])\n\n    useEffect(() => {\n        if (wasmLoaded && aceEditor) {\n            // @ts-ignore\n            let customAnnotations = []\n            if (aceEditorError.row !== -1) {\n                customAnnotations = [\n                    { row: aceEditorError.row, column: 0, type: 'error', text: aceEditorError.text, custom: true }\n                ]\n            }\n            // @ts-ignore\n            aceEditor?.getSession().setAnnotations(customAnnotations);\n        }\n    }, [wasmLoaded, aceEditor, aceEditorError]);\n\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string) => {\n        setSelected(nodeIds)\n        switch (nodeIds) {\n            case chartFilename:\n                setEditor(chartSource)\n                break\n            case valuesFilename:\n                setEditor(valuesSource)\n                break\n            case helmignoreFilename:\n                setEditor(helmignoreSource)\n                break\n\n            case \"__ADD__\":\n                let tmp = sources\n                tmp[\"untitled.yaml\"] = \"\"\n                setSelected(\"untitled.yaml\")\n                setSources(tmp)\n                setEditor(\"\")\n                break\n            default:\n                // @ts-ignore\n                setEditor(sources[nodeIds])\n        }\n    }\n\n    const handleEditor = (newValue: string) => {\n        setEditor(newValue)\n        switch (selected) {\n            case chartFilename:\n                setChartSource(newValue)\n                break\n            case valuesFilename:\n                setValuesSource(newValue)\n                break\n            case helmignoreFilename:\n                setHelmignoreSource(newValue)\n                break\n            default:\n                let tmp = sources\n                // @ts-ignore\n                tmp[selected] = newValue\n                setSources(tmp)\n        }\n\n        // setRenderResult(window.helmRender(JSON.stringify(sources), valuesSource, chartSource, JSON.stringify(settings)))\n    }\n\n    const handleDelete = (event: React.ChangeEvent<{}>, src: string) => {\n        setSelected(chartFilename)\n        setEditor(sources[chartFilename])\n        let tmp = sources\n        delete sources[src]\n        setSources(tmp)\n    }\n\n    const handleSettings = () => {\n        setShowSettings(!showSettings)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Navigation\n                className={classes.navTitle}\n                handleImport={handleImport}\n                handleExport={() => {\n                    const options = {\n                        chart: chartSource,\n                        values: valuesSource,\n                        helmignore: helmignoreSource,\n                        templates: sources\n                    }\n                    handleExport(\"test\", options)\n                }}\n                handleSettings={handleSettings}\n            />\n            <Box sx={{ pt: 10, pb: 8, }}>\n                {wasmLoaded ? (\n                    <>\n                        {wasmError !== \"\" ? (\n                            <Container maxWidth=\"md\" disableGutters={true} style={{ textAlign: \"center\" }}>\n                                <p>{wasmError}</p>\n                            </Container>\n                        ) : (\n                            <>\n                                {showSettings ? (\n                                    <Container maxWidth=\"md\" disableGutters={true}>\n                                        <Settings\n                                            show={true}\n                                            data={settings}\n                                            handleSave={(data) => {\n                                                setShowSettings(false)\n                                                setSettings(data)\n                                            }}\n                                        />\n                                    </Container>\n                                ) : (\n                                    <Container maxWidth=\"xl\" disableGutters={true}>\n                                        <Grid container spacing={0}>\n\n                                            <Grid item xs={2}>\n                                                <FileViewer\n                                                    className={classes.root}\n                                                    onNodeSelect={handleSelect}\n                                                    sources={sources}\n                                                    onDelete={handleDelete}\n                                                    selected={selected}\n                                                />\n                                            </Grid>\n\n                                            <Grid item xs={5}>\n                                                <Typography variant=\"subtitle1\">\n                                                    <input\n                                                        value={fileRename === \"\" ? selected : fileRename}\n                                                        style={{ border: \"none\", width: \"100%\" }}\n                                                        onChange={e => {\n                                                            setfileRename(e.target.value)\n                                                        }}\n                                                        onBlur={e => {\n                                                            let tmp = sources\n                                                            const tmpContent = sources[selected]\n                                                            delete tmp[selected]\n                                                            tmp[e.target.value] = tmpContent\n                                                            setSources(tmp)\n                                                            setSelected(e.target.value)\n                                                            setfileRename(\"\")\n                                                        }}\n                                                    />\n                                                </Typography>\n\n                                                <Editor value={editor} onChange={handleEditor} annotations={[customAnnotations]} />\n                                            </Grid>\n\n                                            <Grid item xs={5}>\n                                                <RenderResult data={renderResult} />\n                                            </Grid>\n\n                                        </Grid>\n                                    </Container>\n                                )}\n                            </>\n                        )}\n                    </>\n                ) : (\n                    <Container maxWidth=\"md\" disableGutters={true} style={{ textAlign: \"center\" }}>\n                        <CircularProgress />\n                        <p>Loading Helm Renderer</p>\n\n                    </Container>\n                )}\n\n\n            </Box>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n\ntype EditorProps = {\n    annotations: any;\n    value: string;\n    onChange: any;\n}\n\n// @ts-ignore\nconst Editor = (props: EditorProps) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [annotations, setAnnotations] = useState([]);\n    const [editor, setEditor] = useState();\n\n    useEffect(() => {\n        if (props.annotations.length > 0) {\n            if (props.annotations[0].message !== \"\") {\n                const nextAnnotations = [\n                    // ...annotations.filter(({ custom }) => !custom),  // annotations by worker\n                    // @ts-ignore\n                    ...props.annotations.map((annotation) => ({ ...annotation, custom: true })) // flag for exclusion\n                ];\n\n                if (editor) {\n                    // @ts-ignore\n                    editor.getSession().setAnnotations(nextAnnotations);\n                }\n            }\n        }\n    }, [editor, setAnnotations, props.annotations]);\n\n    return (\n        <AceEditor\n            name=\"editor\"\n            mode=\"yaml\"\n            theme=\"github\"\n            // @ts-ignore\n            onLoad={setEditor}\n            onChange={props.onChange}\n            // @ts-ignore\n            onValidate={setAnnotations}\n            setOptions={{\n                useWorker: true,\n                enableBasicAutocompletion: true,\n                enableLiveAutocompletion: true,\n            }}\n            editorProps={{\n                $blockScrolling: true\n            }}\n            value={props.value}\n            width=\"100%\"\n            height=\"calc(100vh - 100px)\"\n        />\n    )\n\n}","export const helpersFilename = \"_helpers.tpl\"\n\nexport const helpersContent = `{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"sample.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n{{- end }}\n\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"sample.fullname\" -}}\n{{- if .Values.fullnameOverride }}\n{{- .Values.fullnameOverride | trunc 63 | trimSuffix \"-\" }}\n{{- else }}\n{{- $name := default .Chart.Name .Values.nameOverride }}\n{{- if contains $name .Release.Name }}\n{{- .Release.Name | trunc 63 | trimSuffix \"-\" }}\n{{- else }}\n{{- printf \"%s-%s\" .Release.Name $name | trunc 63 | trimSuffix \"-\" }}\n{{- end }}\n{{- end }}\n{{- end }}\n\n{{/*\nCreate chart name and version as used by the chart label.\n*/}}\n{{- define \"sample.chart\" -}}\n{{- printf \"%s-%s\" .Chart.Name .Chart.Version | replace \"+\" \"_\" | trunc 63 | trimSuffix \"-\" }}\n{{- end }}\n\n{{/*\nCommon labels\n*/}}\n{{- define \"sample.labels\" -}}\nhelm.sh/chart: {{ include \"sample.chart\" . }}\n{{ include \"sample.selectorLabels\" . }}\n{{- if .Chart.AppVersion }}\napp.kubernetes.io/version: {{ .Chart.AppVersion | quote }}\n{{- end }}\napp.kubernetes.io/managed-by: {{ .Release.Service }}\n{{- end }}\n\n{{/*\nSelector labels\n*/}}\n{{- define \"sample.selectorLabels\" -}}\napp.kubernetes.io/name: {{ include \"sample.name\" . }}\napp.kubernetes.io/instance: {{ .Release.Name }}\n{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"sample.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n{{- default (include \"sample.fullname\" .) .Values.serviceAccount.name }}\n{{- else }}\n{{- default \"default\" .Values.serviceAccount.name }}\n{{- end }}\n{{- end }}\n`\n","export const deploymentFilename = \"deployment.yaml\"\n\nexport const deploymentContent = `apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ include \"sample.fullname\" . }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\nspec:\n  {{- if not .Values.autoscaling.enabled }}\n  replicas: {{ .Values.replicaCount }}\n  {{- end }}\n  selector:\n    matchLabels:\n      {{- include \"sample.selectorLabels\" . | nindent 6 }}\n  template:\n    metadata:\n      {{- with .Values.podAnnotations }}\n      annotations:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      labels:\n        {{- include \"sample.selectorLabels\" . | nindent 8 }}\n    spec:\n      {{- with .Values.imagePullSecrets }}\n      imagePullSecrets:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      serviceAccountName: {{ include \"sample.serviceAccountName\" . }}\n      securityContext:\n        {{- toYaml .Values.podSecurityContext | nindent 8 }}\n      containers:\n        - name: {{ .Chart.Name }}\n          securityContext:\n            {{- toYaml .Values.securityContext | nindent 12 }}\n          image: \"{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}\"\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n          ports:\n            - name: http\n              containerPort: 80\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /\n              port: http\n          readinessProbe:\n            httpGet:\n              path: /\n              port: http\n          resources:\n            {{- toYaml .Values.resources | nindent 12 }}\n      {{- with .Values.nodeSelector }}\n      nodeSelector:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      {{- with .Values.affinity }}\n      affinity:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      {{- with .Values.tolerations }}\n      tolerations:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n\n`\n","export const ingressFilename = \"ingress.yaml\"\n\nexport const ingressContent = `{{- if .Values.ingress.enabled -}}\n{{- $fullName := include \"sample.fullname\" . -}}\n{{- $svcPort := .Values.service.port -}}\n{{- if and .Values.ingress.className (not (semverCompare \">=1.18-0\" .Capabilities.KubeVersion.Version)) }}\n  {{- if not (hasKey .Values.ingress.annotations \"kubernetes.io/ingress.class\") }}\n  {{- $_ := set .Values.ingress.annotations \"kubernetes.io/ingress.class\" .Values.ingress.className}}\n  {{- end }}\n{{- end }}\n{{- if semverCompare \">=1.19-0\" .Capabilities.KubeVersion.Version -}}\napiVersion: networking.k8s.io/v1\n{{- else if semverCompare \">=1.14-0\" .Capabilities.KubeVersion.Version -}}\napiVersion: networking.k8s.io/v1beta1\n{{- else -}}\napiVersion: extensions/v1beta1\n{{- end }}\nkind: Ingress\nmetadata:\n  name: {{ $fullName }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\n  {{- with .Values.ingress.annotations }}\n  annotations:\n    {{- toYaml . | nindent 4 }}\n  {{- end }}\nspec:\n  {{- if and .Values.ingress.className (semverCompare \">=1.18-0\" .Capabilities.KubeVersion.Version) }}\n  ingressClassName: {{ .Values.ingress.className }}\n  {{- end }}\n  {{- if .Values.ingress.tls }}\n  tls:\n    {{- range .Values.ingress.tls }}\n    - hosts:\n        {{- range .hosts }}\n        - {{ . | quote }}\n        {{- end }}\n      secretName: {{ .secretName }}\n    {{- end }}\n  {{- end }}\n  rules:\n    {{- range .Values.ingress.hosts }}\n    - host: {{ .host | quote }}\n      http:\n        paths:\n          {{- range .paths }}\n          - path: {{ .path }}\n            {{- if and .pathType (semverCompare \">=1.18-0\" $.Capabilities.KubeVersion.Version) }}\n            pathType: {{ .pathType }}\n            {{- end }}\n            backend:\n              {{- if semverCompare \">=1.19-0\" $.Capabilities.KubeVersion.Version }}\n              service:\n                name: {{ $fullName }}\n                port:\n                  number: {{ $svcPort }}\n              {{- else }}\n              serviceName: {{ $fullName }}\n              servicePort: {{ $svcPort }}\n              {{- end }}\n          {{- end }}\n    {{- end }}\n{{- end }}\n`\n","export const notesFilename = \"NOTES.txt\"\n\nexport const notesContent = `1. Get the application URL by running these commands:\n{{- if .Values.ingress.enabled }}\n{{- range $host := .Values.ingress.hosts }}\n  {{- range .paths }}\n  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}\n  {{- end }}\n{{- end }}\n{{- else if contains \"NodePort\" .Values.service.type }}\n  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath=\"{.spec.ports[0].nodePort}\" services {{ include \"sample.fullname\" . }})\n  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n  echo http://$NODE_IP:$NODE_PORT\n{{- else if contains \"LoadBalancer\" .Values.service.type }}\n     NOTE: It may take a few minutes for the LoadBalancer IP to be available.\n           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include \"sample.fullname\" . }}'\n  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include \"sample.fullname\" . }} --template \"{{\"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\"}}\")\n  echo http://$SERVICE_IP:{{ .Values.service.port }}\n{{- else if contains \"ClusterIP\" .Values.service.type }}\n  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l \"app.kubernetes.io/name={{ include \"sample.name\" . }},app.kubernetes.io/instance={{ .Release.Name }}\" -o jsonpath=\"{.items[0].metadata.name}\")\n  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath=\"{.spec.containers[0].ports[0].containerPort}\")\n  echo \"Visit http://127.0.0.1:8080 to use your application\"\n  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT\n{{- end }}\n`","export const serviceFilename = \"service.yaml\"\n\nexport const serviceContent = `apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"sample.fullname\" . }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\nspec:\n  type: {{ .Values.service.type }}\n  ports:\n    - port: {{ .Values.service.port }}\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    {{- include \"sample.selectorLabels\" . | nindent 4 }}\n`\n","export const serviceaccountFilename = \"serviceaccount.yaml\"\n\nexport const serviceaccountContent = `{{- if .Values.serviceAccount.create -}}\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: {{ include \"sample.serviceAccountName\" . }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\n  {{- with .Values.serviceAccount.annotations }}\n  annotations:\n    {{- toYaml . | nindent 4 }}\n  {{- end }}\n{{- end }}\n`\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}