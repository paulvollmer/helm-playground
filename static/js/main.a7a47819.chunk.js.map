{"version":3,"sources":["components/Navigation/Logo.tsx","components/Navigation/index.tsx","components/RenderResult/RenderError.tsx","components/RenderResult/index.tsx","defaults/chart_yaml.ts","defaults/values_yaml.ts","defaults/helmignore.ts","components/FileViewer/TreeItemLabel.tsx","components/FileViewer/index.tsx","components/Export/index.ts","components/Editor/index.tsx","components/Settings/kubernetesVersions.ts","components/Settings/index.tsx","envvars.ts","Playground.tsx","defaults/helpers.ts","defaults/deployment_yaml.ts","defaults/ingress.ts","defaults/notes.ts","defaults/service.ts","defaults/serviceaccount.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","style","width","id","xmlns","viewBox","fill","d","Navigation","props","React","useState","anchorElGithubMenu","setAnchorElGithubMenu","openGithubMenu","Boolean","handleCloseGithubMenu","AppBar","position","sx","background","zIndex","theme","drawer","Toolbar","Typography","variant","color","flexGrow","marginLeft","Button","onClick","handleExport","IconButton","onMouseOver","event","currentTarget","size","Menu","anchorEl","open","onClose","PaperProps","elevation","overflow","filter","mt","height","ml","mr","content","display","top","right","bgcolor","transform","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","window","browser","Bowser","getParser","navigator","userAgent","getBrowserName","getBrowserVersion","RenderError","error","kind","message","file","line","RenderResult","data","mode","name","value","result","editorProps","$blockScrolling","chartFilename","chartContent","valuesFilename","helmignoreFilename","TreeItemLabel","contextMenu","setContextMenu","handleClose","onContextMenu","preventDefault","mouseX","clientX","mouseY","clientY","cursor","title","anchorReference","anchorPosition","left","undefined","e","onDelete","FileViewer","TreeView","className","defaultCollapseIcon","defaultExpandIcon","defaultExpanded","onNodeSelect","selected","TreeItem","nodeId","label","Object","keys","sources","map","filename","files","zip","JSZip","chart","values","helmignore","templateDir","folder","templates","forEach","templateName","generateAsync","type","then","saveAs","autocompleteChartYaml","caption","meta","score","addCompleter","getCompletions","editor","session","pos","prefix","callback","Editor","setAnnotations","setEditor","useEffect","annotations","length","nextAnnotations","annotation","custom","getSession","onLoad","onChange","onValidate","setOptions","useWorker","enableBasicAutocompletion","enableLiveAutocompletion","kubernetesVersions","useStyles","makeStyles","createStyles","textfield","marginBottom","spacing","Settings","classes","Box","TextField","fullWidth","releaseName","onChangeReleaseName","target","releaseNamespace","onChangeReleaseNamespace","releaseIsUpgrade","onChangeReleaseIsUpgrade","releaseIsInstall","onChangeReleaseIsInstall","releaseRevision","onChangeReleaseRevision","releaseService","onChangeReleaseService","marginTop","Autocomplete","options","getOptionLabel","option","freeSolo","kubeVersion","v","onChangeKubeVersion","renderInput","params","helmVersion","onChangeHelmVersion","helmGoVersion","onChangeHelmGoVersion","helmGitCommit","onChangeHelmGitCommit","helmGitTreeState","onChangeHelmGitTreeState","wasmSize","Number","process","console","log","t","root","initialTemplateSources","Playground","wasmLoaded","setWasmLoaded","wasmLoadProgress","setWasmLoadProgress","wasmError","setWasmError","chartSource","setChartSource","valuesSource","setValuesSource","helmignoreSource","setHelmignoreSource","setSources","setSelected","customAnnotations","setCustomAnnotations","aceEditor","row","text","aceEditorError","setAceEditorError","fileRename","setfileRename","renderResult","setRenderResult","setReleaseName","setReleaseNamespace","setReleaseIsUpgrade","setReleaseIsInstall","setReleaseRevision","setReleaseService","setKubeVersion","setHelmVersion","setHelmGitCommit","setHelmGitTreeState","setHelmGoVersion","axios","request","method","url","responseType","onDownloadProgress","p","loaded","res","Blob","arrayBuffer","bin","go","Go","WebAssembly","instantiate","importObject","run","instance","helmRender","catch","err","filesToRender","settings","JSON","stringify","release","namespace","isUpgrade","isInstall","revision","service","version","gitCommit","gitTreeState","goVersion","tmpError","column","Drawer","flexShrink","boxSizing","Accordion","AccordionSummary","expandIcon","AccordionDetails","nodeIds","tmp","src","component","pt","pb","Container","maxWidth","disableGutters","textAlign","Grid","container","item","xs","border","onBlur","tmpContent","newValue","LinearProgress","createTheme","App","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a47819.chunk.js","sourcesContent":["import React from 'react'\n\nconst Logo = (): JSX.Element => (\n  <div style={{ width: '50px' }}>\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\n      <path\n        fill=\"#fff\"\n        d=\"M136.52938,121.13478c-.572-.54252-1.19462-1.12636-1.81-1.71761-12.61677-12.12115-22.38092-26.13637-28.279-42.702-1.65073-4.63637-2.89692-9.36515-2.67587-14.35871.021-.4739.01959-.94915.05226-1.42214.445-6.44594,4.75912-9.70322,11.05839-8.17669a27.325,27.325,0,0,1,5.73149,2.19653c6.89022,3.45538,12.5062,8.56359,17.67051,14.16571a112.52651,112.52651,0,0,1,21.722,33.42965,8.29635,8.29635,0,0,0,.38946.861c.07116.12855.22232.21282.55927.51883A176.357,176.357,0,0,1,241.968,79.06864c-.17651-.8761-.28195-1.54571-.44772-2.2a112.49436,112.49436,0,0,1-2.65292-36.95637,84.07478,84.07478,0,0,1,4.44444-21.76378,31.32555,31.32555,0,0,1,5.47651-10.17139,15.687,15.687,0,0,1,3.16336-2.82149,7.026,7.026,0,0,1,8.03255-.056,17.27854,17.27854,0,0,1,5.8402,6.73185A53.05435,53.05435,0,0,1,271.08657,26.508a112.50469,112.50469,0,0,1,2.12263,33.00356,95.59806,95.59806,0,0,1-3.49052,19.91081c7.12171,1.31193,14.20955,2.32869,21.1473,3.97713a186.37909,186.37909,0,0,1,20.44069,6.0033A188.31671,188.31671,0,0,1,331.0769,97.9721c6.34538,3.16433,12.38553,6.94066,18.71757,10.53829.20571-.433.50439-.94982.706-1.50212A108.65959,108.65959,0,0,1,383.40128,60.246a37.75787,37.75787,0,0,1,11.822-6.883,17.24558,17.24558,0,0,1,3.67827-.84512c6.264-.71729,8.89351,3.2244,9.35653,7.93183a29.94372,29.94372,0,0,1-.77381,10.35466A87.90551,87.90551,0,0,1,396.75426,95.492c-6.79016,10.97178-14.85015,20.85494-25.09307,28.83042-.30234.2354-.56784.51814-1.07988.99029a177.77993,177.77993,0,0,1,26.59293,30.88244,10.96227,10.96227,0,0,1-1.689.29762c-10.59546.015-21.1911-.01829-31.78622.04607a4.004,4.004,0,0,1-3.17246-1.69,147.87522,147.87522,0,0,0-88.17776-46.54846,143.35862,143.35862,0,0,0-30.27955-1.16923,146.40735,146.40735,0,0,0-82.53728,31.81054,140.06663,140.06663,0,0,0-16.97616,15.84186,4.72839,4.72839,0,0,1-3.86326,1.75742c-10.12056-.07028-20.24188-.035-30.36293-.03495h-2.15212c.618-2.408,6.84026-10.93786,13.88352-18.55281C125.31349,132.2744,130.87768,126.8839,136.52938,121.13478Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M394.52934,347.9123a176.63854,176.63854,0,0,1-23.97343,27.16338c.70941.59068,1.28594,1.07041,1.86212,1.55057A108.31456,108.31456,0,0,1,406.10131,424.772a34.61831,34.61831,0,0,1,2.202,14.42026,14.88544,14.88544,0,0,1-.74786,3.69206,7.20762,7.20762,0,0,1-8.15793,5.02308,22.23329,22.23329,0,0,1-6.76276-2.00629,51.23237,51.23237,0,0,1-9.18151-5.8151,107.59183,107.59183,0,0,1-32.936-46.7072c-.18746-.51334-.39218-1.0204-.72243-1.87691a194.65008,194.65008,0,0,1-25.01223,14.00774,181.66925,181.66925,0,0,1-26.6869,9.72442,187.55649,187.55649,0,0,1-28.3045,5.38805c.16807.84015.26446,1.5098.43745,2.15907a109.172,109.172,0,0,1,2.9708,36.44311,80.804,80.804,0,0,1-4.42286,22.4773,78.24971,78.24971,0,0,1-4.16475,8.74473,13.39,13.39,0,0,1-2.33865,2.97083c-3.98009,4.109-8.73225,4.144-12.61157-.07366a27.28012,27.28012,0,0,1-3.907-5.61776c-3.07685-5.77569-4.6604-12.056-5.791-18.46021a116.86329,116.86329,0,0,1-1.35893-26.465,94.4795,94.4795,0,0,1,2.88466-19.18513c.14009-.53269.268-1.0696.37134-1.61034.02629-.13754-.06342-.2973-.17067-.73825a176.12108,176.12108,0,0,1-80.96855-24.99386c-.40992.90921-.76206,1.67473-1.10168,2.44579a110.47729,110.47729,0,0,1-30.90112,41.42041,38.16071,38.16071,0,0,1-12.04706,6.95909,12.08987,12.08987,0,0,1-6.51516.70023,7.11858,7.11858,0,0,1-5.40329-4.4892c-1.41614-3.424-1.16526-6.985-.68438-10.51691a55.45267,55.45267,0,0,1,4.30768-14.25037A112.49985,112.49985,0,0,1,134.88761,380.779c.459-.43461.92981-.857,1.38087-1.29954a3.76029,3.76029,0,0,0,.36534-.65529,178.90466,178.90466,0,0,1-28.469-31.31672c.98458-.08018,1.64327-.18,2.30205-.1806,10.51436-.00976,21.029.02736,31.54284-.04358a4.70554,4.70554,0,0,1,3.70344,1.62615,146.94611,146.94611,0,0,0,39.40276,28.88494,139.94667,139.94667,0,0,0,49.70395,14.77367q70.68048,6.87067,121.59971-42.85452a7.64571,7.64571,0,0,1,5.99261-2.44347c9.80139.12121,19.60512.04986,29.408.04986h2.53353Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M350.73576,197.76167c2.78711,0,5.47037.18919,8.11487-.0501,2.9951-.271,5.139.8001,7.32354,2.81308,12.61275,11.62214,25.35732,23.10129,38.05863,34.62729.63855.57948,1.29039,1.14432,2.1101,1.8701.76445-.65718,1.48119-1.24318,2.16483-1.8655Q428.14636,217.27914,447.756,199.37a5.44772,5.44772,0,0,1,4.20358-1.64576c3.21888.13038,6.44673.03746,9.8412.03746V303.13036c-1.72309.50368-24.8756.60366-27.63911.0611v-53.362l-.53656-.25427c-9.01079,8.21784-18.0216,16.43564-27.23786,24.8408-9.22584-8.31119-18.34194-16.52347-27.458-24.73577l-.52449.19192c-.023,4.45359-.00774,8.90828-.01046,13.36233q-.00408,6.63942-.00058,13.27882v26.87211h-27.428C350.45161,301.61243,350.21289,203.72342,350.73576,197.76167Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M97.63436,197.88229h27.26325c.55054,1.75251.65821,102.97139.09469,105.525H97.70468c-.15021-6.70344-.04736-13.38394-.06622-20.06131-.01871-6.62261-.0041-13.24531-.0041-20.03958H63.84679V303.047c-2.05946.61518-25.33374.67417-27.64758.123V197.89436H63.73742v37.18876c1.96793.56844,30.92319.67339,33.872.12942.00818-2.97713.02-6.02646.024-9.0758q.0063-4.7433.00094-9.4866,0-4.625,0-9.25C97.63437,204.32179,97.63436,201.24346,97.63436,197.88229Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M157.5757,303.3683V198.1946c1.617-.52913,61.545-.73586,65.46219-.20457v22.41432c-.87869.063-1.7857.18341-2.69279.18454q-16.0086.01994-32.01725.00881l-2.96767,0v17.43353H218.7067V261.2229H185.65838c-.55339,1.98509-.70531,15.81681-.25622,19.64583.84488.05679,1.75.16952,2.6553.17059q16.00862.01863,32.01727.00822h2.96945V303.3683Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M254.28291,303.40855c-.50074-2.82232-.39948-103.60181.09747-105.51735h27.16208v77.76453c1.17173.06084,2.09122.14921,3.01077.15005q16.128.01468,32.2561.00658c.92562,0,1.85125,0,2.90733,0v27.59622Z\"\n      />\n    </svg>\n  </div>\n)\n\nexport default Logo\n","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport Bowser from 'bowser'\nimport Logo from './Logo'\n\nexport type NavigationProps = {\n  // handleImport: () => void\n  handleExport: () => void\n}\n\nconst Navigation = (props: NavigationProps): JSX.Element => {\n  const [anchorElGithubMenu, setAnchorElGithubMenu] = React.useState<null | HTMLElement>(null)\n  const openGithubMenu = Boolean(anchorElGithubMenu)\n\n  const handleClickGithubMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElGithubMenu(event.currentTarget)\n  }\n\n  const handleCloseGithubMenu = () => {\n    setAnchorElGithubMenu(null)\n  }\n\n  const handleGithubRepo = () => {\n    window.open('http://github.com/paulvollmer/helm-playground')\n  }\n\n  const handleGithubIssueBug = () => {\n    const browser = Bowser.getParser(window.navigator.userAgent)\n    window.open(\n      `https://github.com/paulvollmer/helm-playground/issues/new?assignees=&labels=bug&template=bug-report.yaml&title=%5BBUG%5D+%3Ctitle%3E&browser=Browser:%20${browser.getBrowserName()}%0AVersion:%20${browser.getBrowserVersion()}`\n    )\n  }\n\n  const handleGithubIssueFeature = () => {\n    window.open(\n      'https://github.com/paulvollmer/helm-playground/issues/new?assignees=&labels=enhancement&template=feature-request.yaml&title=%5BFEATURE%5D+%3Ctitle%3E'\n    )\n  }\n\n  return (\n    <>\n      <AppBar position=\"fixed\" sx={{ background: '#0f1689', zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <Toolbar>\n          <Logo />\n          <Typography variant=\"h6\" color=\"inherit\" sx={{ flexGrow: 1, marginLeft: '20px' }}>\n            Playground\n          </Typography>\n          {/* <Button color=\"inherit\" onClick={props.handleImport}>Import</Button> */}\n          <Button color=\"inherit\" onClick={props.handleExport}>\n            Export\n          </Button>\n          <IconButton color=\"inherit\" onMouseOver={handleClickGithubMenu} size=\"large\">\n            <GitHubIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Menu\n        anchorEl={anchorElGithubMenu}\n        open={openGithubMenu}\n        onClose={handleCloseGithubMenu}\n        onClick={handleCloseGithubMenu}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: 'visible',\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n            mt: 1.5,\n            '& .MuiAvatar-root': {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            '&:before': {\n              content: '\"\"',\n              display: 'block',\n              position: 'absolute',\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: 'background.paper',\n              transform: 'translateY(-50%) rotate(45deg)',\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={handleGithubRepo}>Github Repo</MenuItem>\n        <MenuItem onClick={handleGithubIssueBug}>Bug Report</MenuItem>\n        <MenuItem onClick={handleGithubIssueFeature}>Feature Request</MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport Typography from '@mui/material/Typography'\nimport { HelmRenderReturnError } from '../../types'\n\nexport type RenderErrorProps = {\n  error: HelmRenderReturnError\n}\n\nexport const RenderError = (props: RenderErrorProps): JSX.Element => {\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">Error Kind: {props.error.kind}</Typography>\n      <Typography variant=\"h6\">{props.error.message}</Typography>\n      <Typography variant=\"body1\">\n        File: {props.error.file}\n        <br />\n        {props.error.line ? `Line: ${props.error.line}` : ''}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/mode-yaml'\nimport Typography from '@mui/material/Typography'\nimport { HelmRenderReturn } from '../../types'\nimport { RenderError } from './RenderError'\n\nexport type RenderResultProps = {\n  data: HelmRenderReturn\n}\n\n/**\n * call the helmRender function and dispay the result\n */\nconst RenderResult = (props: RenderResultProps): JSX.Element => {\n  return (\n    <>\n      {props.data.error ? (\n        <RenderError error={props.data.error} />\n      ) : (\n        <>\n          <Typography variant=\"subtitle1\">Render Output</Typography>\n          <AceEditor\n            mode=\"yaml\"\n            theme=\"github\"\n            name=\"editor\"\n            width=\"100%\"\n            height=\"calc(100vh - 100px)\"\n            value={props.data.result}\n            editorProps={{ $blockScrolling: true }}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default RenderResult\n","export const chartFilename = 'Chart.yaml'\n\nexport const chartContent = `apiVersion: v2\nname: sample\ndescription: A Helm chart for Kubernetes\n\n# A chart can be either an 'application' or a 'library' chart.\n#\n# Application charts are a collection of templates that can be packaged into versioned archives\n# to be deployed.\n#\n# Library charts provide useful utilities or functions for the chart developer. They're included as\n# a dependency of application charts to inject those utilities and functions into the rendering\n# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 0.1.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\n# It is recommended to use it with quotes.\nappVersion: \"1.16.0\"\n\nmaintainers:\n  - name: Paul Vollmer\n    url: https://paulvollmer.net/helm-playground\n`\n","export const valuesFilename = 'values.yaml'\n\nexport const valuesContent = `# Default values for foo.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: nginx\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: v1.0.0\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n`\n","export const helmignoreFilename = '.helmignore'\n\nexport const helmignoreContent = `# Patterns to ignore when building packages.\n# This supports shell glob matching, relative path matching, and\n# negation (prefixed with !). Only one pattern per line.\n.DS_Store\n# Common VCS dirs\n.git/\n.gitignore\n.bzr/\n.bzrignore\n.hg/\n.hgignore\n.svn/\n# Common backup files\n*.swp\n*.bak\n*.tmp\n*.orig\n*~\n# Various IDEs\n.project\n.idea/\n*.tmproj\n.vscode/\n`\n","import React from 'react'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\n\nexport type TreeItemLabelProps = {\n    onDelete: (event: React.ChangeEvent<{}>, src: string) => void // eslint-disable-line\n  title: string\n}\n\nconst TreeItemLabel = (props: TreeItemLabelProps): JSX.Element => {\n  const [contextMenu, setContextMenu] = React.useState<{\n    mouseX: number\n    mouseY: number\n  } | null>(null)\n\n  const handleContextMenu = (event: any) => {\n    event.preventDefault()\n    setContextMenu(\n      contextMenu === null\n        ? {\n            mouseX: event.clientX - 2,\n            mouseY: event.clientY - 4,\n          }\n        : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n          // Other native context menus might behave different.\n          // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n          null\n    )\n  }\n\n  const handleClose = () => {\n    setContextMenu(null)\n  }\n\n  return (\n    <>\n      <div onContextMenu={handleContextMenu} style={{ cursor: 'context-menu' }}>\n        {props.title}\n      </div>\n\n      <Menu\n        open={contextMenu !== null}\n        onClose={handleClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={contextMenu !== null ? { top: contextMenu.mouseY, left: contextMenu.mouseX } : undefined}\n      >\n        <MenuItem\n          onClick={(e) => {\n            props.onDelete(e, props.title)\n            handleClose()\n          }}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default TreeItemLabel\n","import React from 'react'\nimport { TreeItem, TreeView } from '@mui/lab'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport { chartFilename } from '../../defaults/chart_yaml'\nimport { valuesFilename } from '../../defaults/values_yaml'\nimport { helmignoreFilename } from '../../defaults/helmignore'\nimport TreeItemLabel from './TreeItemLabel'\n\nexport type FileViewerProps = {\n  className: string\n  onNodeSelect?: (event: React.ChangeEvent<{}>, nodeIds: string) => void // eslint-disable-line \n  sources: any\n  onDelete: (event: React.ChangeEvent<{}>, src: string) => void // eslint-disable-line\n  selected: string | undefined\n}\n\nconst FileViewer = (props: FileViewerProps): JSX.Element => {\n  return (\n    <>\n      <TreeView\n        className={props.className}\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        defaultExpanded={['templates']}\n        onNodeSelect={props.onNodeSelect}\n        selected={props.selected}\n      >\n        <TreeItem nodeId={chartFilename} label={chartFilename} />\n        <TreeItem nodeId={valuesFilename} label={valuesFilename} />\n        <TreeItem nodeId={helmignoreFilename} label={helmignoreFilename} />\n        <TreeItem nodeId=\"templates\" label=\"templates\">\n          {Object.keys(props.sources).map((filename) => {\n            return <TreeItem key={filename} nodeId={filename} label={<TreeItemLabel onDelete={props.onDelete} title={filename} />} />\n          })}\n          <TreeItem nodeId=\"__ADD__\" label=\"+\" />\n        </TreeItem>\n      </TreeView>\n    </>\n  )\n}\nexport default FileViewer\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\nimport { Sources } from '../../types'\nimport { chartFilename } from '../../defaults/chart_yaml'\nimport { valuesFilename } from '../../defaults/values_yaml'\nimport { helmignoreFilename } from '../../defaults/helmignore'\n\nexport type Files = {\n  chart: string\n  values: string\n  helmignore: string\n  templates: Sources\n}\n\nconst handleExport = (name: string, files: Files) => {\n  const zip = new JSZip()\n\n  zip.file(chartFilename, files.chart)\n  zip.file(valuesFilename, files.values)\n  zip.file(helmignoreFilename, files.helmignore)\n\n  const templateDir = zip.folder('templates')\n  Object.keys(files.templates).forEach((templateName) => {\n    templateDir?.file(templateName, files.templates[templateName])\n  })\n\n  zip.generateAsync({ type: 'blob' }).then((content) => {\n    saveAs(content, `${name}.zip`)\n  })\n}\n\nexport default handleExport\n","import React, { useEffect, useState } from 'react'\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/mode-yaml'\nimport 'ace-builds/src-noconflict/theme-github'\nimport { addCompleter } from 'ace-builds/src-noconflict/ext-language_tools'\n\nexport type EditorProps = {\n  annotations: any\n  value: string\n  onChange: any\n}\n\nconst autocompleteChartYaml = [\n  {\n    name: 'apiVersion',\n    value: 'apiVersion: ',\n    caption: 'apiVersion',\n    meta: 'The chart API version (required)',\n    score: 1,\n  },\n  {\n    name: 'name',\n    value: 'name: ',\n    caption: 'name',\n    meta: 'Chart',\n    score: 1,\n  },\n  {\n    name: 'version',\n    value: 'version: ',\n    caption: 'version',\n    meta: 'A SemVer 2 version (required)',\n    score: 1,\n  },\n  {\n    name: 'kubeVersion',\n    value: 'kubeVersion: ',\n    caption: 'kubeVersion',\n    meta: 'A SemVer range of compatible Kubernetes versions (optional)',\n    score: 1,\n  },\n  {\n    name: 'description',\n    value: 'description: ',\n    caption: 'description',\n    meta: 'A single-sentence description of this project (optional)',\n    score: 1,\n  },\n  {\n    name: 'type',\n    value: 'type: ',\n    caption: 'type',\n    meta: 'The type of the chart (optional)',\n    score: 1,\n  },\n  {\n    name: 'keywords',\n    value: 'keywords:\\n  - ',\n    caption: 'keywords',\n    meta: 'A list of keywords about this project (optional)',\n    score: 1,\n  },\n  {\n    name: 'home',\n    value: 'home: ',\n    caption: 'home',\n    meta: 'The URL of this projects home page (optional)',\n    score: 1,\n  },\n  {\n    name: 'sources',\n    value: 'sources:\\n  - ',\n    caption: 'sources',\n    meta: 'A list of URLs to source code for this project (optional)',\n    score: 1,\n  },\n  {\n    name: 'dependencies',\n    value: 'dependencies:\\n  - name: \\n    version: ',\n    caption: 'dependencies',\n    meta: 'A list of the chart requirements (optional)',\n    score: 1,\n  },\n  {\n    name: 'maintainers',\n    value: 'maintainers:\\n  - name: \\n    email: \\n    url: ',\n    caption: 'maintainers',\n    meta: '',\n    score: 1,\n  },\n  {\n    name: 'icon',\n    value: 'icon: ',\n    caption: 'icon',\n    meta: 'A URL to an SVG or PNG image to be used as an icon (optional).',\n    score: 1,\n  },\n  {\n    name: 'appVersion',\n    value: 'appVersion: ',\n    caption: 'appVersion',\n    meta: \"The version of the app that this contains (optional). Needn't be SemVer. Quotes recommended.\",\n    score: 1,\n  },\n  {\n    name: 'deprecated',\n    value: 'deprecated: true',\n    caption: 'deprecated',\n    meta: 'Whether this chart is deprecated (optional, boolean)',\n    score: 1,\n  },\n  {\n    name: 'annotations',\n    value: 'annotations:\\n  key: value',\n    caption: 'annotations',\n    meta: '',\n    score: 1,\n  },\n]\n\naddCompleter({\n  getCompletions(\n    editor: any, // eslint-disable-line\n    session: any,\n    pos: any,\n    prefix: any,\n    callback: (\n      arg0: null,\n      arg1: {\n        name: string\n        value: string\n        caption: string\n        meta: string\n        score: number\n      }[]\n    ) => void\n  ) {\n    callback(null, [...autocompleteChartYaml])\n  },\n})\n\n// @ts-ignore\nconst Editor = (props: EditorProps): JSX.Element => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [annotations, setAnnotations] = useState([])\n  const [editor, setEditor] = useState()\n\n  useEffect(() => {\n    if (props.annotations.length > 0) {\n      if (props.annotations[0].message !== '') {\n        const nextAnnotations = [\n          // ...annotations.filter(({ custom }) => !custom),  // annotations by worker\n          // @ts-ignore\n          ...props.annotations.map((annotation) => ({\n            ...annotation,\n            custom: true,\n          })), // flag for exclusion\n        ]\n\n        if (editor) {\n          // @ts-ignore\n          editor.getSession().setAnnotations(nextAnnotations)\n        }\n      }\n    }\n  }, [editor, setAnnotations, props.annotations])\n\n  return (\n    <AceEditor\n      name=\"editor\"\n      mode=\"yaml\"\n      theme=\"github\"\n      // @ts-ignore\n      onLoad={setEditor}\n      onChange={props.onChange}\n      // @ts-ignore\n      onValidate={setAnnotations}\n      setOptions={{\n        useWorker: true,\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n      }}\n      editorProps={{\n        $blockScrolling: true,\n      }}\n      value={props.value}\n      width=\"100%\"\n      height=\"calc(100vh - 100px)\"\n    />\n  )\n}\n\nexport default Editor\n","const kubernetesVersions = [\n  'v1.22.0',\n  'v1.21.0',\n  'v1.20.0',\n  'v1.19.0',\n  'v1.18.0',\n  'v1.17.0',\n  'v1.16.0',\n  'v1.15.0',\n  'v1.14.0',\n  'v1.13.0',\n  'v1.12.0',\n  'v1.11.0',\n  'v1.10.0',\n  'v1.9.0',\n  'v1.8.0',\n  'v1.7.0',\n  'v1.6.0',\n  'v1.5.0',\n  'v1.4.0',\n  'v1.3.0',\n  'v1.2.0',\n  'v1.1.0',\n  'v1.0.0',\n]\n\nexport default kubernetesVersions\n","import React from 'react'\nimport Autocomplete from '@mui/material/Autocomplete'\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport Typography from '@mui/material/Typography'\nimport createStyles from '@mui/styles/createStyles'\nimport makeStyles from '@mui/styles/makeStyles'\nimport kubernetesVersions from './kubernetesVersions'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    textfield: {\n      marginBottom: theme.spacing(2),\n    },\n  })\n)\n\nexport type SettingsProps = {\n  releaseName: string\n  releaseNamespace: string\n  releaseIsUpgrade: string\n  releaseIsInstall: string\n  releaseRevision: string\n  releaseService: string\n  kubeVersion: string\n  helmVersion: string\n  helmGitCommit: string\n  helmGitTreeState: string\n  helmGoVersion: string\n  onChangeReleaseName: (v: string) => void\n  onChangeReleaseNamespace: (v: string) => void\n  onChangeReleaseIsUpgrade: (v: string) => void\n  onChangeReleaseIsInstall: (v: string) => void\n  onChangeReleaseRevision: (v: string) => void\n  onChangeReleaseService: (v: string) => void\n  onChangeKubeVersion: (v: string) => void\n  onChangeHelmVersion: (v: string) => void\n  onChangeHelmGitCommit: (v: string) => void\n  onChangeHelmGitTreeState: (v: string) => void\n  onChangeHelmGoVersion: (v: string) => void\n}\n\nconst Settings = (props: SettingsProps): JSX.Element => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"button\">Release</Typography>\n      </Box>\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"release-name\"\n        label=\"Release Name\"\n        value={props.releaseName}\n        onChange={(e) => props.onChangeReleaseName(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"release-namespace\"\n        label=\"Release Namespace\"\n        value={props.releaseNamespace}\n        onChange={(e) => props.onChangeReleaseNamespace(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"release-isupgrade\"\n        label=\"Release Is Upgrade\"\n        value={props.releaseIsUpgrade}\n        onChange={(e) => props.onChangeReleaseIsUpgrade(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"release-isinstall\"\n        label=\"Release Is Install\"\n        value={props.releaseIsInstall}\n        onChange={(e) => props.onChangeReleaseIsInstall(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"release-revision\"\n        label=\"Release Revision\"\n        value={props.releaseRevision}\n        onChange={(e) => props.onChangeReleaseRevision(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"release-service\"\n        label=\"Release Service\"\n        value={props.releaseService}\n        onChange={(e) => props.onChangeReleaseService(e.target.value)}\n      />\n\n      <Box sx={{ marginTop: 3, marginBottom: 2 }}>\n        <Typography variant=\"button\">Kubernetes Version</Typography>\n      </Box>\n      <Autocomplete\n        options={kubernetesVersions}\n        getOptionLabel={(option) => option}\n        freeSolo\n        value={props.kubeVersion}\n        onChange={(e, v) => {\n          if (v !== null) {\n            props.onChangeKubeVersion(v)\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n                {...params} // eslint-disable-line\n            className={classes.textfield}\n            fullWidth\n            variant=\"standard\"\n            id=\"kubernetes-version\"\n            label=\"Kubernetes Version\"\n            onChange={(e) => {\n              props.onChangeKubeVersion(e.target.value)\n            }}\n          />\n        )}\n      />\n      {/* <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"kubernetes-major\"\n                        label=\"Kubernetes Major\"\n                        value={kubeMajor}\n                        onChange={(e) => setKubeMajor(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textfield}\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"kubernetes-minor\"\n                        label=\"Kubernetes Minor\"\n                        value={kubeMinor}\n                        onChange={(e) => setKubeMinor(e.target.value)}\n                    /> */}\n\n      <Box sx={{ marginTop: 3, marginBottom: 2 }}>\n        <Typography variant=\"button\">Helm Version</Typography>\n      </Box>\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"helm-version\"\n        label=\"Version\"\n        value={props.helmVersion}\n        onChange={(e) => props.onChangeHelmVersion(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"helm-goversion\"\n        label=\"GoVersion\"\n        value={props.helmGoVersion}\n        onChange={(e) => props.onChangeHelmGoVersion(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"helm-gitcommit\"\n        label=\"GitCommit\"\n        value={props.helmGitCommit}\n        onChange={(e) => props.onChangeHelmGitCommit(e.target.value)}\n      />\n      <TextField\n        className={classes.textfield}\n        fullWidth\n        variant=\"standard\"\n        id=\"helm-gittreestate\"\n        label=\"GitTreeState\"\n        value={props.helmGitTreeState}\n        onChange={(e) => props.onChangeHelmGitTreeState(e.target.value)}\n      />\n    </>\n  )\n}\n\nexport default Settings\n","export const version = process.env.REACT_APP_VERSION\nexport const wasmSize = Number(process.env.REACT_APP_WASM_SIZE)\n","import React, { useEffect, useState } from 'react'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport Box from '@mui/material/Box'\nimport Container from '@mui/material/Container'\nimport Drawer from '@mui/material/Drawer'\nimport Grid from '@mui/material/Grid'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport makeStyles from '@mui/styles/makeStyles'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport { Ace } from 'ace-builds'\nimport axios from 'axios'\n\nimport Navigation from './components/Navigation'\nimport RenderResult from './components/RenderResult'\nimport FileViewer from './components/FileViewer'\nimport { chartContent, chartFilename } from './defaults/chart_yaml'\nimport { helpersContent, helpersFilename } from './defaults/helpers'\nimport { valuesContent, valuesFilename } from './defaults/values_yaml'\nimport { ingressContent, ingressFilename } from './defaults/ingress'\nimport { serviceContent, serviceFilename } from './defaults/service'\nimport { notesContent, notesFilename } from './defaults/notes'\nimport { serviceaccountContent, serviceaccountFilename } from './defaults/serviceaccount'\nimport { deploymentContent, deploymentFilename } from './defaults/deployment_yaml'\nimport { helmignoreContent, helmignoreFilename } from './defaults/helmignore'\nimport handleExport from './components/Export'\n// import handleImport from './components/import'\nimport Editor from './components/Editor'\nimport Settings from './components/Settings'\nimport { HelmRenderReturn, SettingsData, Sources } from './types'\nimport { version, wasmSize } from './envvars'\n\nconsole.log(`git hash: ${version}`)\n\nconst drawerWidth = 280\n\nconst useStyles = makeStyles((t) => ({\n  root: {\n    flexGrow: 1,\n  },\n}))\n\nconst initialTemplateSources: Sources = {}\ninitialTemplateSources[helpersFilename] = helpersContent\ninitialTemplateSources[deploymentFilename] = deploymentContent\ninitialTemplateSources[ingressFilename] = ingressContent\ninitialTemplateSources[notesFilename] = notesContent\ninitialTemplateSources[serviceFilename] = serviceContent\ninitialTemplateSources[serviceaccountFilename] = serviceaccountContent\n\nconst Playground = (): JSX.Element => {\n  const classes = useStyles()\n\n  const [wasmLoaded, setWasmLoaded] = useState<boolean>(false)\n  const [wasmLoadProgress, setWasmLoadProgress] = useState(0)\n  const [wasmError, setWasmError] = useState<string>('')\n\n  const [chartSource, setChartSource] = useState(chartContent)\n  const [valuesSource, setValuesSource] = useState(valuesContent)\n  const [helmignoreSource, setHelmignoreSource] = useState(helmignoreContent)\n  const [sources, setSources] = useState(initialTemplateSources)\n\n  const [selected, setSelected] = useState(chartFilename)\n  const [editor, setEditor] = useState(chartContent)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [customAnnotations, setCustomAnnotations] = useState({})\n  const [aceEditor] = useState<Ace.Editor>()\n  const [aceEditorError, setAceEditorError] = useState({ row: 0, text: '' })\n  const [fileRename, setfileRename] = useState('')\n\n  const [renderResult, setRenderResult] = useState<HelmRenderReturn>({\n    result: '',\n  })\n\n  const [releaseName, setReleaseName] = useState<string>('sample')\n  const [releaseNamespace, setReleaseNamespace] = useState<string>('default')\n  const [releaseIsUpgrade, setReleaseIsUpgrade] = useState<string>('false')\n  const [releaseIsInstall, setReleaseIsInstall] = useState<string>('false')\n  const [releaseRevision, setReleaseRevision] = useState<string>('1')\n  const [releaseService, setReleaseService] = useState<string>('Helm')\n  const [kubeVersion, setKubeVersion] = useState<string>('v1.20.0')\n  const [helmVersion, setHelmVersion] = useState<string>('v3.6')\n  const [helmGitCommit, setHelmGitCommit] = useState<string>('')\n  const [helmGitTreeState, setHelmGitTreeState] = useState<string>('')\n  const [helmGoVersion, setHelmGoVersion] = useState<string>('go1.17.2')\n\n  const getSettingsObject = (): SettingsData => {\n    return {\n      release: {\n        name: releaseName,\n        namespace: releaseNamespace,\n        isUpgrade: releaseIsUpgrade,\n        isInstall: releaseIsInstall,\n        revision: releaseRevision,\n        service: releaseService,\n      },\n      kubeVersion: {\n        version: kubeVersion,\n      },\n      helmVersion: {\n        version: helmVersion,\n        gitCommit: helmGitCommit,\n        gitTreeState: helmGitTreeState,\n        goVersion: helmGoVersion,\n      },\n    }\n  }\n\n  useEffect(() => {\n    axios\n      .request({\n        method: 'get',\n        url: 'main.wasm',\n        responseType: 'arraybuffer',\n        onDownloadProgress: (p) => {\n          setWasmLoadProgress((p.loaded / wasmSize) * 100)\n        },\n      })\n      .then((res) => {\n        setWasmLoadProgress(100)\n        return new Blob([res.data]).arrayBuffer()\n      })\n      .then((bin) => {\n        // @ts-ignore\n        const go = new Go()\n        WebAssembly.instantiate(bin, go.importObject)\n          .then((result) => {\n            // @ts-ignore\n            go.run(result.instance)\n            // @ts-ignore\n            window.helmRender = helmRender\n            setWasmLoaded(true)\n          })\n          .catch((err) => {\n            console.error('webassembly instantiate error', err)\n            setWasmError('could not instantiate helm renderer')\n          })\n      })\n  }, [])\n\n  useEffect(() => {\n    if (wasmLoaded) {\n      const filesToRender: Sources = {}\n      filesToRender['_helpers.tpl'] = sources['_helpers.tpl']\n      filesToRender[selected] = sources[selected]\n\n      const settings = JSON.stringify(getSettingsObject())\n      const result = window.helmRender(JSON.stringify(filesToRender), valuesSource, chartSource, settings)\n      setRenderResult(result)\n\n      let annotation = {}\n      let tmpError = { row: -1, text: '' }\n      if (result.error) {\n        if (result.error.kind !== '') {\n          switch (result?.error.kind) {\n            case 'input':\n              switch (result.error.file) {\n                case valuesFilename:\n                  tmpError = {\n                    row: result.error.line - 1,\n                    text: result.error.message,\n                  }\n                  break\n\n                case chartFilename:\n                  tmpError = {\n                    row: result.error.line - 1,\n                    text: result.error.message,\n                  }\n                  break\n                default:\n                  break\n              }\n              break\n\n            case 'render':\n              annotation = {\n                row: result.error.line - 1,\n                column: 0,\n                text: result.error.message,\n                type: 'error',\n              }\n              break\n\n            default:\n              break\n          }\n        }\n      }\n      setCustomAnnotations(annotation)\n      setAceEditorError(tmpError)\n    }\n  }, [\n    wasmLoaded,\n    editor,\n    sources,\n    valuesSource,\n    chartSource,\n    selected,\n    releaseName,\n    releaseNamespace,\n    releaseIsUpgrade,\n    releaseIsInstall,\n    releaseRevision,\n    releaseService,\n    kubeVersion,\n    helmVersion,\n    helmGitCommit,\n    helmGitTreeState,\n    helmGoVersion,\n  ])\n\n  useEffect(() => {\n    if (wasmLoaded && aceEditor) {\n      // @ts-ignore\n      let customAnnotations = [] // eslint-disable-line\n      if (aceEditorError.row !== -1) {\n        customAnnotations = [\n          {\n            row: aceEditorError.row,\n            column: 0,\n            type: 'error',\n            text: aceEditorError.text,\n            custom: true,\n          },\n        ]\n      }\n      // @ts-ignore\n      aceEditor?.getSession().setAnnotations(customAnnotations)\n    }\n  }, [wasmLoaded, aceEditor, aceEditorError])\n\n  const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string) => { // eslint-disable-line\n    setSelected(nodeIds)\n    switch (nodeIds) {\n      case chartFilename:\n        setEditor(chartSource)\n        break\n      case valuesFilename:\n        setEditor(valuesSource)\n        break\n      case helmignoreFilename:\n        setEditor(helmignoreSource)\n        break\n\n      case '__ADD__':\n        const tmp = sources // eslint-disable-line\n        tmp['untitled.yaml'] = ''\n        setSelected('untitled.yaml')\n        setSources(tmp)\n        setEditor('')\n        break\n      default:\n        // @ts-ignore\n        setEditor(sources[nodeIds])\n    }\n  }\n\n  const handleEditor = (newValue: string) => {\n    setEditor(newValue)\n    switch (selected) {\n      case chartFilename:\n        setChartSource(newValue)\n        break\n      case valuesFilename:\n        setValuesSource(newValue)\n        break\n      case helmignoreFilename:\n        setHelmignoreSource(newValue)\n        break\n      default:\n        const tmp = sources // eslint-disable-line\n        // @ts-ignore\n        tmp[selected] = newValue\n        setSources(tmp)\n    }\n  }\n\n  const handleDelete = (event: React.ChangeEvent<{}>, src: string) => { // eslint-disable-line\n    setSelected(chartFilename)\n    setEditor(sources[chartFilename])\n    const tmp = sources\n    delete sources[src]\n    setSources(tmp)\n  }\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <Navigation\n        // handleImport={handleImport}\n        handleExport={() => {\n          const options = {\n            chart: chartSource,\n            values: valuesSource,\n            helmignore: helmignoreSource,\n            templates: sources,\n          }\n          handleExport('test', options)\n        }}\n      />\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: 'auto' }}>\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"settings\" id=\"settings\">\n              <Typography>Settings</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Settings\n                releaseName={releaseName}\n                releaseNamespace={releaseNamespace}\n                releaseIsUpgrade={releaseIsUpgrade}\n                releaseIsInstall={releaseIsInstall}\n                releaseRevision={releaseRevision}\n                releaseService={releaseService}\n                kubeVersion={kubeVersion}\n                helmVersion={helmVersion}\n                helmGitCommit={helmGitCommit}\n                helmGitTreeState={helmGitTreeState}\n                helmGoVersion={helmGoVersion}\n                onChangeReleaseName={(d) => setReleaseName(d)}\n                onChangeReleaseNamespace={(d) => setReleaseNamespace(d)}\n                onChangeReleaseIsUpgrade={(d) => setReleaseIsUpgrade(d)}\n                onChangeReleaseIsInstall={(d) => setReleaseIsInstall(d)}\n                onChangeReleaseRevision={(d) => setReleaseRevision(d)}\n                onChangeReleaseService={(d) => setReleaseService(d)}\n                onChangeKubeVersion={(d) => setKubeVersion(d)}\n                onChangeHelmVersion={(d) => setHelmVersion(d)}\n                onChangeHelmGitCommit={(d) => setHelmGitCommit(d)}\n                onChangeHelmGitTreeState={(d) => setHelmGitTreeState(d)}\n                onChangeHelmGoVersion={(d) => setHelmGoVersion(d)}\n              />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion defaultExpanded>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"files\" id=\"files\">\n              <Typography>Files</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <FileViewer\n                className={classes.root}\n                onNodeSelect={handleSelect}\n                sources={sources}\n                onDelete={handleDelete}\n                selected={selected}\n              />\n            </AccordionDetails>\n          </Accordion>\n        </Box>\n      </Drawer>\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\n        <Box sx={{ pt: 10, pb: 8 }}>\n          {wasmLoaded ? (\n            <>\n              {wasmError !== '' ? (\n                <Container maxWidth=\"md\" disableGutters style={{ textAlign: 'center' }}>\n                  <p>{wasmError}</p>\n                </Container>\n              ) : (\n                <Container maxWidth=\"xl\" disableGutters>\n                  <Grid container spacing={0}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"subtitle1\">\n                        <input\n                          value={fileRename === '' ? selected : fileRename}\n                          style={{ border: 'none', width: '100%' }}\n                          onChange={(e) => {\n                            setfileRename(e.target.value)\n                          }}\n                          onBlur={(e) => {\n                            const tmp = sources\n                            const tmpContent = sources[selected]\n                            delete tmp[selected]\n                            tmp[e.target.value] = tmpContent\n                            setSources(tmp)\n                            setSelected(e.target.value)\n                            setfileRename('')\n                          }}\n                        />\n                      </Typography>\n\n                      <Editor value={editor} onChange={handleEditor} annotations={[customAnnotations]} />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                      <RenderResult data={renderResult} />\n                    </Grid>\n                  </Grid>\n                </Container>\n              )}\n            </>\n          ) : (\n            <Container maxWidth=\"md\" disableGutters style={{ textAlign: 'center' }}>\n              <LinearProgress variant=\"determinate\" value={wasmLoadProgress} />\n              <p>Loading Helm Renderer</p>\n            </Container>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Playground\n","export const helpersFilename = '_helpers.tpl'\n\nexport const helpersContent = `{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"sample.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n{{- end }}\n\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"sample.fullname\" -}}\n{{- if .Values.fullnameOverride }}\n{{- .Values.fullnameOverride | trunc 63 | trimSuffix \"-\" }}\n{{- else }}\n{{- $name := default .Chart.Name .Values.nameOverride }}\n{{- if contains $name .Release.Name }}\n{{- .Release.Name | trunc 63 | trimSuffix \"-\" }}\n{{- else }}\n{{- printf \"%s-%s\" .Release.Name $name | trunc 63 | trimSuffix \"-\" }}\n{{- end }}\n{{- end }}\n{{- end }}\n\n{{/*\nCreate chart name and version as used by the chart label.\n*/}}\n{{- define \"sample.chart\" -}}\n{{- printf \"%s-%s\" .Chart.Name .Chart.Version | replace \"+\" \"_\" | trunc 63 | trimSuffix \"-\" }}\n{{- end }}\n\n{{/*\nCommon labels\n*/}}\n{{- define \"sample.labels\" -}}\nhelm.sh/chart: {{ include \"sample.chart\" . }}\n{{ include \"sample.selectorLabels\" . }}\n{{- if .Chart.AppVersion }}\napp.kubernetes.io/version: {{ .Chart.AppVersion | quote }}\n{{- end }}\napp.kubernetes.io/managed-by: {{ .Release.Service }}\n{{- end }}\n\n{{/*\nSelector labels\n*/}}\n{{- define \"sample.selectorLabels\" -}}\napp.kubernetes.io/name: {{ include \"sample.name\" . }}\napp.kubernetes.io/instance: {{ .Release.Name }}\n{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"sample.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n{{- default (include \"sample.fullname\" .) .Values.serviceAccount.name }}\n{{- else }}\n{{- default \"default\" .Values.serviceAccount.name }}\n{{- end }}\n{{- end }}\n`\n","export const deploymentFilename = 'deployment.yaml'\n\nexport const deploymentContent = `apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ include \"sample.fullname\" . }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\nspec:\n  {{- if not .Values.autoscaling.enabled }}\n  replicas: {{ .Values.replicaCount }}\n  {{- end }}\n  selector:\n    matchLabels:\n      {{- include \"sample.selectorLabels\" . | nindent 6 }}\n  template:\n    metadata:\n      {{- with .Values.podAnnotations }}\n      annotations:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      labels:\n        {{- include \"sample.selectorLabels\" . | nindent 8 }}\n    spec:\n      {{- with .Values.imagePullSecrets }}\n      imagePullSecrets:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      serviceAccountName: {{ include \"sample.serviceAccountName\" . }}\n      securityContext:\n        {{- toYaml .Values.podSecurityContext | nindent 8 }}\n      containers:\n        - name: {{ .Chart.Name }}\n          securityContext:\n            {{- toYaml .Values.securityContext | nindent 12 }}\n          image: \"{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}\"\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n          ports:\n            - name: http\n              containerPort: 80\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /\n              port: http\n          readinessProbe:\n            httpGet:\n              path: /\n              port: http\n          resources:\n            {{- toYaml .Values.resources | nindent 12 }}\n      {{- with .Values.nodeSelector }}\n      nodeSelector:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      {{- with .Values.affinity }}\n      affinity:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      {{- with .Values.tolerations }}\n      tolerations:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n\n`\n","export const ingressFilename = 'ingress.yaml'\n\nexport const ingressContent = `{{- if .Values.ingress.enabled -}}\n{{- $fullName := include \"sample.fullname\" . -}}\n{{- $svcPort := .Values.service.port -}}\n{{- if and .Values.ingress.className (not (semverCompare \">=1.18-0\" .Capabilities.KubeVersion.Version)) }}\n  {{- if not (hasKey .Values.ingress.annotations \"kubernetes.io/ingress.class\") }}\n  {{- $_ := set .Values.ingress.annotations \"kubernetes.io/ingress.class\" .Values.ingress.className}}\n  {{- end }}\n{{- end }}\n{{- if semverCompare \">=1.19-0\" .Capabilities.KubeVersion.Version -}}\napiVersion: networking.k8s.io/v1\n{{- else if semverCompare \">=1.14-0\" .Capabilities.KubeVersion.Version -}}\napiVersion: networking.k8s.io/v1beta1\n{{- else -}}\napiVersion: extensions/v1beta1\n{{- end }}\nkind: Ingress\nmetadata:\n  name: {{ $fullName }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\n  {{- with .Values.ingress.annotations }}\n  annotations:\n    {{- toYaml . | nindent 4 }}\n  {{- end }}\nspec:\n  {{- if and .Values.ingress.className (semverCompare \">=1.18-0\" .Capabilities.KubeVersion.Version) }}\n  ingressClassName: {{ .Values.ingress.className }}\n  {{- end }}\n  {{- if .Values.ingress.tls }}\n  tls:\n    {{- range .Values.ingress.tls }}\n    - hosts:\n        {{- range .hosts }}\n        - {{ . | quote }}\n        {{- end }}\n      secretName: {{ .secretName }}\n    {{- end }}\n  {{- end }}\n  rules:\n    {{- range .Values.ingress.hosts }}\n    - host: {{ .host | quote }}\n      http:\n        paths:\n          {{- range .paths }}\n          - path: {{ .path }}\n            {{- if and .pathType (semverCompare \">=1.18-0\" $.Capabilities.KubeVersion.Version) }}\n            pathType: {{ .pathType }}\n            {{- end }}\n            backend:\n              {{- if semverCompare \">=1.19-0\" $.Capabilities.KubeVersion.Version }}\n              service:\n                name: {{ $fullName }}\n                port:\n                  number: {{ $svcPort }}\n              {{- else }}\n              serviceName: {{ $fullName }}\n              servicePort: {{ $svcPort }}\n              {{- end }}\n          {{- end }}\n    {{- end }}\n{{- end }}\n`\n","export const notesFilename = 'NOTES.txt'\n\nexport const notesContent = `1. Get the application URL by running these commands:\n{{- if .Values.ingress.enabled }}\n{{- range $host := .Values.ingress.hosts }}\n  {{- range .paths }}\n  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}\n  {{- end }}\n{{- end }}\n{{- else if contains \"NodePort\" .Values.service.type }}\n  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath=\"{.spec.ports[0].nodePort}\" services {{ include \"sample.fullname\" . }})\n  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n  echo http://$NODE_IP:$NODE_PORT\n{{- else if contains \"LoadBalancer\" .Values.service.type }}\n     NOTE: It may take a few minutes for the LoadBalancer IP to be available.\n           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include \"sample.fullname\" . }}'\n  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include \"sample.fullname\" . }} --template \"{{\"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\"}}\")\n  echo http://$SERVICE_IP:{{ .Values.service.port }}\n{{- else if contains \"ClusterIP\" .Values.service.type }}\n  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l \"app.kubernetes.io/name={{ include \"sample.name\" . }},app.kubernetes.io/instance={{ .Release.Name }}\" -o jsonpath=\"{.items[0].metadata.name}\")\n  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath=\"{.spec.containers[0].ports[0].containerPort}\")\n  echo \"Visit http://127.0.0.1:8080 to use your application\"\n  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT\n{{- end }}\n`\n","export const serviceFilename = 'service.yaml'\n\nexport const serviceContent = `apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"sample.fullname\" . }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\nspec:\n  type: {{ .Values.service.type }}\n  ports:\n    - port: {{ .Values.service.port }}\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    {{- include \"sample.selectorLabels\" . | nindent 4 }}\n`\n","export const serviceaccountFilename = 'serviceaccount.yaml'\n\nexport const serviceaccountContent = `{{- if .Values.serviceAccount.create -}}\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: {{ include \"sample.serviceAccountName\" . }}\n  labels:\n    {{- include \"sample.labels\" . | nindent 4 }}\n  {{- with .Values.serviceAccount.annotations }}\n  annotations:\n    {{- toYaml . | nindent 4 }}\n  {{- end }}\n{{- end }}\n`\n","import React from 'react'\nimport { ThemeProvider, Theme, StyledEngineProvider } from '@mui/material/styles'\nimport { createTheme, CssBaseline } from '@mui/material'\nimport Playground from './Playground'\n\ndeclare module '@mui/styles/defaultTheme' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme {}\n}\n\nconst theme = createTheme()\n\nconst App = (): JSX.Element => (\n  <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Playground />\n    </ThemeProvider>\n  </StyledEngineProvider>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}